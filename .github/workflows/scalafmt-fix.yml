name: 'ScalaFmt Fix'

# This GitHub Action runs the ScalaFmt linting tool on the entire codebase.
# It will fix, commit, and push linted code.
# It will only run when someone comments "scalafmt" on a PR.

run-name: ${{ format('ScalaFmt Fix on {0}', github.event.pull_request.head.ref) }}

on:
  issue_comment:
    types:
      - created

jobs:
  run-scalafmt-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: ./.github/set_up_cromwell_action
        with:
          cromwell_repo_token: ${{ secrets.BROADBOT_GITHUB_TOKEN }}
      - name: Check for ScalaFmt Comment
        id: check-comment
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" && "${{ github.event.comment.body }}" == *"scalafmt"* ]]; then
            echo "::set-output name=comment-triggered::true"
            echo "::set-output name=comment-author-email::${{ github.event.comment.user.login }}@users.noreply.github.com"
            echo "::set-output name=comment-author-name::${{ github.event.comment.user.login }}"
          else
            echo "::set-output name=comment-triggered::false"
          fi
        shell: bash
      - name: Run ScalaFmt
        if: steps.check-comment.outputs.comment-triggered == 'true'
        run: |
          sbt scalafmtAll
          git config --global user.email "${{ steps.check-comment.outputs.comment-author-email }}"
          git config --global user.name "${{ steps.check-comment.outputs.comment-author-name }}"
          git add .
          git commit -m "Auto-format code with ScalaFmt"
          git push origin ${{ github.event.pull_request.head.ref }}
        working-directory: ${{ github.workspace }}
