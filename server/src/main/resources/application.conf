akka {
  log-dead-letters = "off"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "cromwell.server.CromwellAkkaLogFilter"
  actor.guardian-supervisor-strategy = "cromwell.core.CromwellUserGuardianStrategy"

  http {
    server {
      request-timeout = 40s
      bind-timeout = 5s
    }

    client.connecting-timeout = 40s
  }

  coordinated-shutdown.phases {
    # Adds stop-io-activity to the dependencies of before-actor-system-terminate
    before-actor-system-terminate.depends-on = ["cluster-shutdown", "stop-io-activity"]

    # Adds abort-all-workflows-activity to the dependencies of service-stop
    service-stop.depends-on = ["service-requests-done", "abort-all-workflows"]
  }
}

services {
  KeyValue {
    class = "cromwell.services.keyvalue.impl.SqlKeyValueServiceActor"
    config {
      # Similar to metadata service config, see cromwell.examples.conf
      # db-batch-size = 200
      # db-flush-rate = 5 seconds
    }
  }
  MetadataService {
    class = "cromwell.services.metadata.impl.MetadataServiceActor"
    config {
      # See cromwell.examples.conf for details on settings one can use here as they depend on the implementation
      # being used.
    }
  }
  Instrumentation {
    # Default noop service - instrumentation metrics are ignored
    class = "cromwell.services.instrumentation.impl.noop.NoopInstrumentationServiceActor"
  }
  HealthMonitor {
    class = "cromwell.services.healthmonitor.impl.standard.StandardHealthMonitorServiceActor"
    # Override the standard dispatcher. In particular this one has a low throughput so as to be lower in priority
    dispatcher = "akka.dispatchers.health-monitor-dispatcher"
  }
  LoadController {
    class = "cromwell.services.loadcontroller.impl.LoadControllerServiceActor"
    config {
      # See cromwell.examples.conf for details on settings one can use here
    }
  }
  Womtool {
    # Default - run within the Cromwell JVM
    class = "cromwell.services.womtool.impl.WomtoolServiceInCromwellActor"
  }
}
