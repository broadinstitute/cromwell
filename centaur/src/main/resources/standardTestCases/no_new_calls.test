name: no_new_calls
testFormat: workflowfailure

files {
  workflow: no_new_calls/no_new_calls.wdl
  options: no_new_calls/no_new_calls.options
}

metadata {
  workflowName: no_new_calls
  status: Failed
  "calls.no_new_calls.boundToFail.executionStatus": Failed
  "calls.no_new_calls.shouldSucceed.executionStatus": Done
}

absent-metadata-keys: [
  "calls.no_new_calls.shouldNotStart.executionStatus",
  # see below regarding delayedTask1
  "calls.no_new_calls.delayedTask2.executionStatus",

  # Currently, if cromwell restarts, it may attempt execute "Restarting calls" on boundToFail, shouldSucceed, AND then
  # when shouldSucceed finally finishes, it "Restarting calls" on delayedTask1.
  #
  # Cromwell then catches the mistaken restart by failing the call and setting the error message to:
  # > Cromwell server was restarted while this workflow was running. As part of the restart process, Cromwell attempted
  # > to reconnect to this job, however it was never started in the first place. This is a benign failure and not the
  # > cause of failure for this workflow, it can be safely ignored.
  #
  # So this test has two possibilities:
  # - If cromwell doesn't restart, the key below is absent.
  # - If cromwell does restart, the key has a value Failed.

  #"calls.no_new_calls.delayedTask1.executionStatus",
]
