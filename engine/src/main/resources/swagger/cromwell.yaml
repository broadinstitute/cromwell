#
# After any edits to this file run `sbt generateRestApiDocs` and commit the generated changes to `docs/api/RESTAPI.md`.
#

swagger: '2.0'
info:
  title: Cromwell Server REST API
  description: Describes the REST API provided by a Cromwell server
  license:
    name: BSD
    url: 'https://github.com/broadinstitute/cromwell/blob/develop/LICENSE.txt'
  version: '30'
produces:
  - application/json
paths:
  '/api/workflows/{version}':
    post:
      summary: Submit a workflow for execution
      description: Submits a workflow to Cromwell. Note that this endpoint can accept an unlimited number of input files via workflowInputs_N but swagger needs them to be explicitly defined so we have provided 5 as an example.
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution.
          required: true
          type: file
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: workflowInputs
          description: JSON or YAML file containing the inputs as an object. For WDL workflows a skeleton file can be generated from WOMtool using the "inputs" subcommand. When multiple files are specified, in case of key conflicts between multiple input JSON files, higher values of x in workflowInputs_x override lower values. For example, an input specified in workflowInputs_3 will override an input with the same name in workflowInputs or workflowInputs_2. Similarly, an input key specified in workflowInputs_5 will override an identical input key in any other input file.
          required: false
          type: file
          in: formData
        - name: workflowInputs_2
          description: A second JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_3
          description: A third JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_4
          description: A fourth JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_5
          description: A fifth JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowOptions
          description: JSON file containing configuration options for the execution of this workflow.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - name: workflowRoot
          description: The root object to be run. Only necessary for CWL submissions containing multiple objects (in an array).
          required: false
          type: string
          in: formData
        - name: workflowTypeVersion
          description: The specification version for the workflow language being used. For WDL, Cromwell currently supports draft-2 fully and has some support for draft-3. For CWL, Cromwell currently supports v1.0.
          required: false
          type: string
          enum: [draft-2, draft-3, v1.0]
          in: formData
        - name: labels
          description: JSON object of labels to apply to this workflow.
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: ZIP file containing workflow source files that are used to resolve local imports. This zip bundle will be unpacked in a sandbox accessible to this workflow.
          required: false
          type: file
          in: formData
      tags:
        - Workflows
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowIdAndStatus'
        '400':
          $ref: '#/responses/InvalidSubmission'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/batch':
    post:
      summary: Submit a batch of workflows for execution
      description: In instances where you want to run the same workflow multiple times with varying inputs you may submit a workflow batch. This endpoint is fundamentally the same as the standard submission endpoint with the exception that the inputs JSON will be an array of objects instead of a single object.
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution.
          required: true
          type: file
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: workflowInputs
          description: JSON file containing the inputs as an array of objects. Every element of the array will correspond to a single workflow. For WDL workflows a skeleton file can be generated from WOMtool using the "inputs" subcommand. When multiple files are specified, in case of key conflicts between multiple input JSON files, higher values of x in workflowInputs_x override lower values. For example, an input specified in workflowInputs_3 will override an input with the same name in workflowInputs or workflowInputs_2. Similarly, an input key specified in workflowInputs_5 will override an identical input key in any other input file.
          required: true
          type: file
          in: formData
        - name: workflowOptions
          description: JSON file containing configuration options for the execution of this workflow.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - name: workflowTypeVersion
          description: The specification version for the workflow language being used. Cromwell currently supports draft-2. For CWL, Cromwell currently supports v1.0.
          required: false
          type: string
          enum: [draft-2, v1.0]
          in: formData
        - name: labels
          description: JSON object of labels to apply to this workflow.
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: ZIP file containing workflow source files that are used to resolve local imports. This zip bundle will be unpacked in a sandbox accessible to these workflows.
          required: false
          type: file
          in: formData
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/labels':
    get:
      summary: Retrieves the current labels for a workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
    patch:
      summary: Update labels for a workflow
      description: Update multiple labels for an existing workflow. When supplying a label with a key unique to the workflow submission, a new label key/value entry is appended to that workflow's metadata. When supplying a label with a key that is already associated to the workflow submission, the original label value is updated with the new value for that workflow's metadata.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: labels
          description: >
            Custom labels submitted as JSON.
            Example: {"key-1":"value-1","key-2":"value-2"}
          required: true
          in: body
          schema:
            type: object
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/abort':
    post:
      summary: Abort a running workflow
      description: Request Cromwell to abort a running workflow. For instance this might be necessary in cases where you have submitted a workflow with incorrect inputs or no longer need the results. Cromwell will make a best effort attempt to immediately halt any currently running jobs from this workflow.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/releaseHold':
      post:
        summary: Switch a workflow from 'On Hold' to 'Submitted' status
        description: Request Cromwell to release the hold on a workflow. It will switch the status of a workflow from 'On Hold' to 'Submitted' so it can be picked for running. For instance this might be necessary in cases where you have submitted a workflow with workflowOnHold = true.
        parameters:
          - $ref: '#/parameters/versionParam'
          - $ref: '#/parameters/singleId'
        tags:
          - Workflows
        responses:
          '200':
            $ref: '#/responses/OkIdAndStatus'
          '400':
            $ref: '#/responses/BadRequest'
          '403':
            $ref: '#/responses/Forbidden'
          '404':
            $ref: '#/responses/NotFound'
          '500':
            $ref: '#/responses/ServerError'
        security:
          - google_oauth:
              - openid
  '/api/workflows/{version}/{id}/status':
    get:
      summary: Retrieves the current state for a workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/outputs':
    get:
      summary: Get the outputs for a workflow
      description: Retrieve the outputs for the specified workflow. Cromwell will return any outputs which currently exist even if a workflow has not successfully completed.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/logs':
    get:
      summary: Get the logs for a workflow
      description: Returns paths to the standard out and standard error files that were generated during the execution of all calls in a workflow. A call has one or more standard out and standard error logs, depending on if the call was scattered or not. In the latter case, one log is provided for each instance of the call that has been run.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OK'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/query':
    get:
      summary: Get workflows matching some criteria
      description: Query for workflows which match various criteria. When a combination of criteria are applied the endpoint will return
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: start
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later start datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: end
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: status
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - Submitted
            - Running
            - Aborting
            - Failed
            - Succeeded
            - Aborted
          description: >
            Returns only workflows with the specified status.  If specified multiple times,
            returns workflows in any of the specified statuses.
        - name: name
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          description: >
            Returns only workflows with the specified name.  If specified multiple times,
            returns workflows with any of the specified names.
        - name: id
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
          description: >
            Returns only workflows with the specified workflow id.  If specified multiple times,
            returns workflows with any of the specified workflow ids.
        - name: label
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Returns workflows with the specified label keys.  If specified multiple times,
            returns workflows with all of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: labelor
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Returns workflows with the specified label keys.  If specified multiple times,
            returns workflows with any of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: additionalQueryResultFields
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          description: >
            Includes the specified keys in the metadata for the returned workflows.
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
    post:
      summary: Get workflows matching some criteria
      description: Query workflows by start dates, end dates, names, ids, labels, or statuses.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: parameters
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowQueryParameter'
          description: >
            Same query parameters as GET /query endpoint, submitted as a json list.
            Example: [{"status":"Success"},{"status":"Failed"}]
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
          - openid
  '/api/workflows/{version}/{id}/timing':
    get:
      summary: Get a visual diagram of a running workflow
      description: Returns a javascript file which will render a Gantt chart for the requested workflow. The bars in the chart represent start and end times for individual task invocations. This javascript is intended to be embedded into another web page.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/{id}/metadata':
    get:
      summary: Get workflow and call-level metadata for a specified workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
        - name: includeKey
          description: >
            When specified key(s) to include from the metadata. Matches any key starting with the value. May not be
            used with excludeKey. This applies to all keys in the response, including within nested blocks.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: excludeKey
          description: >
            When specified key(s) to exclude from the metadata. Matches any key starting with the value. May not be
            used with includeKey. This applies to all keys in the response, including within nested blocks.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: expandSubWorkflows
          description: >
            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
          required: false
          type: boolean
          default: false
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/callcaching/diff':
    get:
      summary: Explain hashing differences for 2 calls
      description: This endpoint returns the hash differences between 2 completed (successfully or not) calls.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowA
          description: Workflow Id of the first workflow
          required: true
          type: string
          in: query
        - name: callA
          description: Fully qualified name, including workflow name, of the first call.
          required: true
          type: string
          in: query
        - name: indexA
          description: Shard index for the first call for cases where the requested call was part of a scatter.
          required: false
          type: integer
          in: query
        - name: workflowB
          description: Workflow Id of the second workflow
          required: true
          type: string
          in: query
        - name: callB
          description: Fully qualified name, including workflow name, of the second call
          required: true
          type: string
          in: query
        - name: indexB
          description: Shard index for the second call for cases where the requested call was part of a scatter.
          required: false
          type: integer
          in: query
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OK'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
           description: No matching cache entry. Cromwell versions prior to 28 will not have recorded information necessary for this endpoint and thus will also appear to not exist.
        '500':
          $ref: '#/responses/ServerError'
      security:
        - google_oauth:
            - openid
  '/api/workflows/{version}/backends':
    get:
      summary: List the supported backends
      description: Returns the backends supported by this Cromwell server, as well as the default backend.
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/BackendResponse'
      security:
        - google_oauth:
            - openid
  '/engine/{version}/stats':
    get:
      summary: Returns basic statistics from this Cromwell server.
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Engine
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/StatsResponse'
  '/engine/{version}/version':
    get:
      summary: Return the version of this Cromwell server
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Engine
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/VersionResponse'
  '/engine/{version}/status':
      get:
        summary: Return the current health status of any monitored subsystems
        parameters:
          - $ref: '#/parameters/versionParam'
        tags:
          - Engine
        responses:
          '200':
            description: All subsystems report an "ok" status
            schema:
              $ref: '#/definitions/StatusResponse'
          '500':
            description: At least one subsystem does not have an "ok" status
            schema:
              $ref: '#/definitions/StatusResponse'
responses:
  OkIdAndStatus:
    description: Successful Request
    schema:
      $ref: '#/definitions/WorkflowIdAndStatus'
  OK:
    description: Successful Request
    schema:
      $ref: '#/definitions/WorkflowIdAndStatus'
  InvalidSubmission:
    description: Invalid submission request
  BadRequest:
    description: Malformed Workflow ID
  Forbidden:
    description: Workflow in terminal status
  NotFound:
    description: Workflow ID Not Found
  ServerError:
    description: Internal Error
parameters:
  singleId:
    name: id
    description: A workflow ID
    required: true
    type: string
    in: path
    pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
  workflowTypeParam:
    name: workflowType
    type: string
    description: The workflow language for the file you submitted. Cromwell currently supports WDL.
    required: false
    in: formData
  versionParam:
    name: version
    description: Cromwell API Version
    required: true
    type: string
    in: path
    default: v1 # This really should be an enum but swagger-ui seems to not like it
securityDefinitions:
  google_oauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
definitions:
  WorkflowSubmitResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: e442e52a-9de1-47f0-8b4f-e6e565008cf1
      status:
        type: string
        description: The status of the workflow
        example: Submitted
  WorkflowIdAndStatus:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: e442e52a-9de1-47f0-8b4f-e6e565008cf1
      status:
        type: string
        description: The status of the workflow
        example: Submitted
  WorkflowMetadataResponse:
    description: Workflow and call level metadata
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
      submission:
        type: string
        format: date-time
        description: Submission datetime of the workflow in ISO8601 format with milliseconds
      start:
        type: string
        format: date-time
        description: Start datetime of the workflow in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the workflow in ISO8601 format with milliseconds
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      calls:
        $ref: '#/definitions/CallMetadata'
      failures:
        $ref: '#/definitions/FailureMessage'
  CallMetadata:
    description: Call level metadata
    required:
      - inputs
      - executionStatus
    properties:
      inputs:
        type: object
        description: Mapping of input fully qualified names to stringified values
      executionStatus:
        type: string
        description: Status in Cromwell execution terms.
      backend:
        type: string
        description: The type of backend on which the call executed (e.g. JES, SGE, Local)
      backendStatus:
        type: string
        description: Status in backend-specific terms.  Currently this will only be defined for the JES backend.
      start:
        type: string
        format: date-time
        description: Start datetime of the call execution in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the call execution in ISO8601 format with milliseconds
      jobId:
        type: string
        description: Backend-specific job ID
      failures:
        $ref: '#/definitions/FailureMessage'
      returnCode:
        type: integer
        description: Call execution return code
      stdout:
        type: string
        description: Path to the standard output file for this call
      stderr:
        type: string
        description: Path to the standard error file for this call
      backendLogs:
        type: object
        description: Paths to backend specific logs for this call
  FailureMessage:
    description: Failure messages
    required:
      - failure
      - timestamp
    properties:
      failure:
        type: string
        description: The failure message
      timestamp:
        type: string
        format: date-time
        description: The time at which this failure occurred
  WorkflowQueryParameter:
    description: Workflow query parameters
    minProperties: 1
    maxProperties: 1
    properties:
      start:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or later start datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      end:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      status:
        type: string
        enum:
          - Submitted
          - Running
          - Aborting
          - Failed
          - Succeeded
          - Aborted
        description: >
          Returns only workflows with the specified status.  If specified multiple times,
          returns workflows in any of the specified statuses.
      name:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        description: >
          Returns only workflows with the specified name.  If specified multiple times,
          returns workflows with any of the specified names.
      id:
        type: string
        pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
        description: >
          Returns only workflows with the specified workflow id.  If specified multiple times,
          returns workflows with any of the specified workflow ids.
  WorkflowQueryResponse:
    description: Response to a workflow query
    required:
      - results
      - totalResultsCount
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/WorkflowQueryResult'
      totalResultsCount:
        type: integer
  WorkflowQueryResult:
    description: Result for an individual workflow returned by a workflow query
    required:
      - id
      - name
      - status
    properties:
      id:
        type: string
        description: Workflow ID
      name:
        type: string
        description: Workflow name
      status:
        type: string
        description: Workflow status
      start:
        type: string
        format: date-time
        description: Workflow start datetime
      end:
        type: string
        format: date-time
        description: Workflow end datetime
  BackendResponse:
    required:
      - supportedBackends
      - defaultBackend
    properties:
      supportedBackends:
        type: array
        description: The backends supported by this server
        items:
          type: string
      defaultBackend:
        type: string
        description: The default backend of this server
  StatsResponse:
    description: Provides engine level statistics for things running inside the system
    required:
      - workflows
      - jobs
    properties:
      workflows:
        type: integer
        description: The number of currently running workflows
      jobs:
        type: integer
        description: The number of currently running jobs
  VersionResponse:
    description: Returns the version of Cromwell
    properties:
      cromwell:
        type: string
        description: The version of the Cromwell Engine
        example: 30
  StatusResponse:
    description: Returns the status of monitored subsystems.
    type: object
    properties:
      serviceName:
        type: object
        properties:
          ok:
            type: boolean
          messages:
            type: array
            items:
              type: string
  LabelsResponse:
    required:
      - id
      - labels
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: label-key-1
      labels:
        type: string
        description: The labels which have been updated
        example: label-value-1
