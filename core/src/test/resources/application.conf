# Additions/updates to main's application.conf

workflow-options {
  encrypted-fields: ["refresh_token"]
  workflow-log-dir: "cromwell-test-workflow-logs"
}

backend {
  providers {
    Mock {
      actor-factory = "cromwell.engine.backend.mock.RetryableBackendLifecycleActorFactory"
      config {

      }
    }
  }
}

# Bumped up for tests
database.db.connectionTimeout = 30000

database-test-mysql {
  # Run the following to (optionally) drop and (re-)create the database:
  # mysql -ucromwell -ptest -e "DROP DATABASE IF EXISTS cromwell_test; CREATE DATABASE cromwell_test;"
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://localhost:3306/cromwell_test?useSSL=false&rewriteBatchedStatements=true&serverTimezone=UTC&useInformationSchema=true"
    url = ${?CROMWELL_BUILD_MYSQL_JDBC_URL}
    user = "cromwell"
    user = ${?CROMWELL_BUILD_MYSQL_USERNAME}
    password = "test"
    password = ${?CROMWELL_BUILD_MYSQL_PASSWORD}
    connectionTimeout = 5000
  }
}

database-test-mariadb {
  # Installing both mysql and mariadb takes skill... Instead, try running this docker from the cromwell directory:
  #
  # docker run \
  #   --rm \
  #   --env MYSQL_ROOT_PASSWORD=private \
  #   --env MYSQL_USER=cromwell \
  #   --env MYSQL_PASSWORD=test \
  #   --env MYSQL_DATABASE=cromwell_test \
  #   --publish 13306:3306 \
  #   --volume ${PWD}/src/ci/docker-compose/mariadb-conf.d:/etc/mysql/conf.d \
  #   mariadb:10.3

  # Run the following to (optionally) drop and (re-)create the database:
  # mysql --protocol=tcp -P13306 -ucromwell -ptest -e "DROP DATABASE IF EXISTS cromwell_test; CREATE DATABASE cromwell_test;"
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "org.mariadb.jdbc.Driver"
    url = "jdbc:mariadb://localhost:13306/cromwell_test?rewriteBatchedStatements=true"
    url = ${?CROMWELL_BUILD_MARIADB_JDBC_URL}
    user = "cromwell"
    user = ${?CROMWELL_BUILD_MARIADB_USERNAME}
    password = "test"
    password = ${?CROMWELL_BUILD_MARIADB_PASSWORD}
    connectionTimeout = 5000
  }
}

database-test-postgresql {
  # Run the following to (optionally) drop and (re-)create the database:
  # psql postgres <<< 'drop database if exists cromwell_test; create database cromwell_test;'
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/cromwell_test?reWriteBatchedInserts=true"
    url = ${?CROMWELL_BUILD_POSTGRESQL_JDBC_URL}
    user = "cromwell"
    user = ${?CROMWELL_BUILD_POSTGRESQL_USERNAME}
    password = "test"
    password = ${?CROMWELL_BUILD_POSTGRESQL_PASSWORD}
    connectionTimeout = 5000
  }
}

akka {
  log-dead-letters = "off"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
}
