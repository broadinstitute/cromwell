swagger: '2.0'

# This line is included when the YAML is served by Cromwell if it sees an environment variable called "SWAGGER_BASE_PATH"
#basePath: ...
info:
  title: Cromwell Server REST API
  description: Describes the REST API provided by a Cromwell server
  license:
    name: BSD
    url: 'https://github.com/broadinstitute/cromwell/blob/develop/LICENSE.txt'
  version: '30'
produces:
  - application/json
paths:
  '/api/workflows/{version}':
    post:
      operationId: submit
      summary: Submit a workflow for execution
      description: Submits a workflow to Cromwell. Note that this endpoint can accept an unlimited number of input files via workflowInputs_N but swagger needs them to be explicitly defined so we have provided 5 as an example.
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: workflowInputs
          description: JSON or YAML file containing the inputs as an object. For WDL workflows a skeleton file can be generated from WOMtool using the "inputs" subcommand. When multiple files are specified, in case of key conflicts between multiple input JSON files, higher values of x in workflowInputs_x override lower values. For example, an input specified in workflowInputs_3 will override an input with the same name in workflowInputs or workflowInputs_2. Similarly, an input key specified in workflowInputs_5 will override an identical input key in any other input file.
          required: false
          type: file
          in: formData
        - name: workflowInputs_2
          description: A second JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_3
          description: A third JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_4
          description: A fourth JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowInputs_5
          description: A fifth JSON or YAML file containing inputs.
          required: false
          type: file
          in: formData
        - name: workflowOptions
          description: JSON file containing configuration options for the execution of this workflow.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - $ref: '#/parameters/workflowTypeVersionParam'
        - name: labels
          description: JSON object of labels to apply to this workflow.
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: ZIP file containing workflow source files that are used to resolve local imports. This zip bundle will be unpacked in a sandbox accessible to this workflow.
          required: false
          type: file
          in: formData
        - name: requestedWorkflowId
          description: An ID to ascribe to this workflow. Must be a JSON string in UUID-format. If not supplied a random ID will be generated for the workflow.
          required: false
          type: string
          in: formData
      tags:
        - Workflows
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowIdAndStatus'
        '400':
          $ref: '#/responses/InvalidSubmission'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/batch':
    post:
      operationId: submitBatch
      summary: Submit a batch of workflows for execution
      description: In instances where you want to run the same workflow multiple times with varying inputs you may submit a workflow batch. This endpoint is fundamentally the same as the standard submission endpoint with the exception that the inputs JSON will be an array of objects instead of a single object.
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: workflowInputs
          description: JSON file containing the inputs as an array of objects. Every element of the array will correspond to a single workflow. For WDL workflows a skeleton file can be generated from WOMtool using the "inputs" subcommand. When multiple files are specified, in case of key conflicts between multiple input JSON files, higher values of x in workflowInputs_x override lower values. For example, an input specified in workflowInputs_3 will override an input with the same name in workflowInputs or workflowInputs_2. Similarly, an input key specified in workflowInputs_5 will override an identical input key in any other input file.
          required: true
          type: file
          in: formData
        - name: workflowOptions
          description: JSON file containing configuration options for the execution of this workflow.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - $ref: '#/parameters/workflowTypeVersionParam'
        - name: labels
          description: JSON object of labels to apply to this workflow.
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: ZIP file containing workflow source files that are used to resolve local imports. This zip bundle will be unpacked in a sandbox accessible to these workflows.
          required: false
          type: file
          in: formData
        - name: requestedWorkflowId
          description: A set of IDs to ascribe to these workflows. Must be a JSON list of strings in UUID-format. Must have the same number of entries and be in the same order as the workflow inputs list. If not supplied, random ID will be generated for the workflows.
          required: false
          type: string
          in: formData
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/labels':
    get:
      operationId: labels
      summary: Retrieves the current labels for a workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
    patch:
      operationId: updateLabels
      summary: Update labels for a workflow
      description: Update multiple labels for an existing workflow. When supplying a label with a key unique to the workflow submission, a new label key/value entry is appended to that workflow's metadata. When supplying a label with a key that is already associated to the workflow submission, the original label value is updated with the new value for that workflow's metadata.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: labels
          description: >
            Custom labels submitted as JSON.
            Example: {"key-1":"value-1","key-2":"value-2"}
          required: true
          in: body
          schema:
            type: object
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/abort':
    post:
      operationId: abort
      summary: Abort a running workflow
      description: Request Cromwell to abort a running workflow. For instance this might be necessary in cases where you have submitted a workflow with incorrect inputs or no longer need the results. Cromwell will schedule a halt of all currently running jobs from this workflow.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/releaseHold':
    post:
      operationId: releaseHold
      summary: Switch a workflow from 'On Hold' to 'Submitted' status
      description: Request Cromwell to release the hold on a workflow. It will switch the status of a workflow from 'On Hold' to 'Submitted' so it can be picked for running. For instance this might be necessary in cases where you have submitted a workflow with workflowOnHold = true.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/status':
    get:
      operationId: status
      summary: Retrieves the current state for a workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/outputs':
    get:
      operationId: outputs
      summary: Get the outputs for a workflow
      description: Retrieve the outputs for the specified workflow. Cromwell will return any outputs which currently exist even if a workflow has not successfully completed.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/logs':
    get:
      operationId: logs
      summary: Get the logs for a workflow
      description: Returns paths to the standard out and standard error files that were generated during the execution of all calls in a workflow. A call has one or more standard out and standard error logs, depending on if the call was scattered or not. In the latter case, one log is provided for each instance of the call that has been run.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OK'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/query':
    get:
      operationId: queryGet
      summary: Get workflows matching some criteria
      description: Query for workflows which match various criteria. When a combination of criteria are applied the endpoint will return
      parameters:
        - $ref: '#/parameters/versionParam'
        - name : submission
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later submission time. Can be specified at most once. If both submission time and start date are
            specified, submission time should be before or equal to start date.
        - name: start
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later start datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: end
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: status
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - Submitted
            - Running
            - Aborting
            - Failed
            - Succeeded
            - Aborted
          description: >
            Returns only workflows with the specified status.  If specified multiple times,
            returns workflows in any of the specified statuses.
        - name: name
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          description: >
            Returns only workflows with the specified name.  If specified multiple times,
            returns workflows with any of the specified names.
        - name: id
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
          description: >
            Returns only workflows with the specified workflow id.  If specified multiple times,
            returns workflows with any of the specified workflow ids.
        - name: label
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Returns workflows with the specified label keys.  If specified multiple times,
            returns workflows with all of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: labelor
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Returns workflows with the specified label keys.  If specified multiple times,
            returns workflows with any of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: excludeLabelAnd
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Excludes workflows with the specified label.  If specified multiple times,
            excludes workflows with all of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: excludeLabelOr
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
          description: >
            Excludes workflows with the specified label.  If specified multiple times,
            excludes workflows with any of the specified label keys. Specify the label key
            and label value pair as separated with
            "label-key:label-value"
        - name: additionalQueryResultFields
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          description: >
            Currently only 'labels' is a valid value here. Use it to include a list of labels with each result.
        - name : includeSubworkflows
          required: false
          type: boolean
          format: boolean
          in: query
          description: Include subworkflows in results. By default, it is taken as true.
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
    post:
      operationId: queryPost
      summary: Get workflows matching some criteria
      description: Query workflows by start dates, end dates, names, ids, labels, or statuses.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: parameters
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowQueryParameter'
          description: >
            Same query parameters as GET /query endpoint, submitted as a json list.
            Example: [{"status":"Success"},{"status":"Failed"}]
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/timing':
    get:
      operationId: timing
      summary: Get a visual diagram of a running workflow
      description: Returns a javascript file which will render a Gantt chart for the requested workflow. The bars in the chart represent start and end times for individual task invocations. This javascript is intended to be embedded into another web page.
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OkIdAndStatus'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/metadata/failed-jobs':
    get:
      operationId: failed-jobs
      summary: Get call-level metadata of failed tasks for a specified root workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
      tags:
        - Workflows
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/{id}/metadata':
    get:
      operationId: metadata
      summary: Get workflow and call-level metadata for a specified workflow
      parameters:
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/singleId'
        - name: includeKey
          description: >
            When specified, filters metadata to only return fields with names which begins with this value.
            This key is used relative to the root of the response *and* relative to each call's metadata fields.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: excludeKey
          description: >
            When specified, filters metadata to not return any field with a name which begins with this value.
            This key is used relative to the root of the response *and* relative to each call's metadata fields.
            Use 'calls' to filter out all call level metadata.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: expandSubWorkflows
          description: >
            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
          required: false
          type: boolean
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/callcaching/diff':
    get:
      operationId: callCacheDiff
      summary: Explain hashing differences for 2 calls
      description: This endpoint returns the hash differences between 2 completed (successfully or not) calls.
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowA
          description: Workflow Id of the first workflow
          required: true
          type: string
          in: query
        - name: callA
          description: Fully qualified name, including workflow name, of the first call.
          required: true
          type: string
          in: query
        - name: indexA
          description: Shard index for the first call for cases where the requested call was part of a scatter.
          required: false
          type: integer
          in: query
        - name: workflowB
          description: Workflow Id of the second workflow
          required: true
          type: string
          in: query
        - name: callB
          description: Fully qualified name, including workflow name, of the second call
          required: true
          type: string
          in: query
        - name: indexB
          description: Shard index for the second call for cases where the requested call was part of a scatter.
          required: false
          type: integer
          in: query
      tags:
        - Workflows
      responses:
        '200':
          $ref: '#/responses/OK'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          description: No matching cache entry. Cromwell versions prior to 28 will not have recorded information necessary for this endpoint and thus will also appear to not exist.
        '500':
          $ref: '#/responses/ServerError'
  '/api/workflows/{version}/backends':
    get:
      operationId: backends
      summary: List the supported backends
      description: Returns the backends supported by this Cromwell server, as well as the default backend.
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/BackendResponse'
  '/api/womtool/{version}/describe':
    post:
      operationId: describe
      summary: Machine-readable description of a workflow, including inputs and outputs
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowInputs
          description: JSON or YAML file containing the inputs as an object.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - $ref: '#/parameters/workflowTypeVersionParam'
      responses:
        '200':
          description: Workflow description.
          schema:
            $ref: '#/definitions/WorkflowDescription'
      tags:
        - "Womtool"
  '/engine/{version}/version':
    get:
      operationId: engineVersion
      summary: Return the version of this Cromwell server
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Engine
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/VersionResponse'
  '/engine/{version}/status':
    get:
      operationId: engineStatus
      summary: Return the current health status of any monitored subsystems
      parameters:
        - $ref: '#/parameters/versionParam'
      tags:
        - Engine
      responses:
        '200':
          description: All subsystems report an "ok" status
          schema:
            $ref: '#/definitions/StatusResponse'
        '500':
          description: At least one subsystem does not have an "ok" status
          schema:
            $ref: '#/definitions/StatusResponse'
  '/api/ga4gh/wes/v1/service-info':
    get:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: Get service info
      description: >-
        May include information related (but not limited to) the workflow
        descriptor formats, versions supported, the WES API versions supported,
        and information about general service availability.
      operationId: GetServiceInfo
      parameters: []
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/ServiceInfo'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
  '/api/ga4gh/wes/v1/runs':
    get:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: List runs
      description: >-
        Runs are listed from newest to oldest. When paging through the list, the client
        should not make assumptions about live updates, but should assume the
        contents of the list reflect the workflow list at the moment that the
        first page is requested. To monitor a specific workflow run, use
        GetRunStatus or GetRunLog.
      operationId: ListRuns
      parameters:
        - name: page_size
          in: query
          description: >-
            OPTIONAL The preferred number of workflow runs to return in a page.
            If not provided, the implementation should use a default page size.
            The implementation must not return more items than `page_size`, but
            it may return fewer.  Clients should not assume that if fewer than
            `page_size` items are returned that all items have been returned. 
            The availability of additional pages is indicated by the value of
            `next_page_token` in the response.
          type: integer
          format: int64
        - name: page_token
          in: query
          description: >-
            OPTIONAL Token to use to indicate where to start getting results. If
            unspecified, return the first page of results.
          type: string
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RunListResponse'
        '400':
          description: The request is malformed.
          $ref: '#/responses/BadRequest'
        '401':
          description: The request is unauthorized.
          $ref: '#/responses/InvalidSubmission'
        '403':
          description: The requester is not authorized to perform this action.
          $ref: '#/responses/Forbidden'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
    post:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: Run workflow
      description: >-
        This endpoint creates a new workflow run and returns a `RunId` to
        monitor its progress.
        
        
        The `workflow_attachment` array may be used to upload files that are
        required to execute the workflow, including the primary workflow, tools
        imported by the workflow, other files referenced by the workflow, or
        files which are part of the input.  The implementation should stage
        these files to a temporary directory and execute the workflow from
        there. These parts must have a Content-Disposition header with a
        "filename" provided for each part.  Filenames may include
        subdirectories, but must not include references to parent directories
        with '..' -- implementations should guard against maliciously
        constructed filenames.
        
        
        The `workflow_url` is either an absolute URL to a workflow file that is
        accessible by the WES endpoint, or a relative URL corresponding to one
        of the files attached using `workflow_attachment`.
        
        
        The `workflow_params` JSON object specifies input parameters, such as
        input files.  The exact format of the JSON object depends on the
        conventions of the workflow language being used.  Input files should
        either be absolute URLs, or relative URLs corresponding to files
        uploaded using `workflow_attachment`.  The WES endpoint must understand
        and be able to access URLs supplied in the input.  This is
        implementation specific.
        
        
        The `workflow_type` is the type of workflow language and must be "WDL"
        currently (or another alternative supported by this WES instance).
        
        
        The `workflow_type_version` is the version of the workflow language
        submitted and must be one supported by this WES instance.
        
        
        See the `RunRequest` documentation for details about other fields.
      operationId: RunWorkflow
      consumes:
        - multipart/form-data
      parameters:
        - name: workflow_params
          description: ""
          required: false
          type: string
          in: formData
        - name: workflow_type
          description: ""
          required: false
          type: string
          in: formData
        - name: workflow_type_version
          description: ""
          required: false
          type: string
          in: formData
        - name: tags
          description: ''
          required: false
          type: string
          in: formData
        - name: workflow_engine_parameters
          description: ''
          required: false
          type: string
          in: formData
        - name: workflow_url
          description: ''
          required: false
          type: string
          in: formData
        - name: workflow_attachment
          description: ''
          required: false
          type: array
          items:
            type: file
            format: binary
          in: formData
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/RunId'
        '400':
          description: The request is malformed.
          $ref: '#/responses/BadRequest'
        '401':
          description: The request is unauthorized.
          $ref: '#/responses/InvalidSubmission'
        '403':
          description: The requester is not authorized to perform this action.
          $ref: '#/responses/Forbidden'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
  '/api/ga4gh/wes/v1/runs/{run_id}':
    get:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: Get run log
      description: >-
        This endpoint provides detailed information about a given workflow run.
        The returned result has information about the outputs produced by this
        workflow (if available), a log object which allows the stderr and stdout
        to be retrieved, a log array so stderr/stdout for individual tasks can
        be retrieved, and the overall state of the workflow run (e.g. RUNNING,
        see the State section).
      operationId: GetRunLog
      parameters:
        - name: run_id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RunLog'
        '401':
          description: The request is unauthorized.
          $ref: '#/responses/InvalidSubmission'
        '403':
          description: The requester is not authorized to perform this action.
          $ref: '#/responses/Forbidden'
        '404':
          description: The requested workflow run not found.
          $ref: '#/responses/NotFound'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
      deprecated: false
  '/api/ga4gh/wes/v1/runs/{run_id}/cancel':
    post:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: Cancel run
      description: Cancel a running workflow.
      operationId: CancelRun
      parameters:
        - name: run_id
          in: path
          description: Run ID
          required: true
          type: string
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RunId'
        '401':
          description: The request is unauthorized.
          $ref: '#/responses/InvalidSubmission'
        '403':
          description: The requester is not authorized to perform this action.
          $ref: '#/responses/Forbidden'
        '404':
          description: The requested workflow run wasn't found.
          $ref: '#/responses/NotFound'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
  '/api/ga4gh/wes/v1/runs/{run_id}/status':
    get:
      tags:
        - GA4GH Workflow Execution Service (WES) - Alpha preview
      summary: Get run status
      description: >-
        This provides an abbreviated (and likely fast depending on
        implementation) status of the running workflow, returning a simple
        result with the  overall state of the workflow run (e.g. RUNNING, see
        the State section).
      operationId: GetRunStatus
      parameters:
        - name: run_id
          in: path
          description: Run ID
          required: true
          type: string
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RunStatus'
        '401':
          description: The request is unauthorized.
          $ref: '#/responses/InvalidSubmission'
        '403':
          description: The requester is not authorized to perform this action.
          $ref: '#/responses/Forbidden'
        '404':
          description: The requested workflow run wasn't found.
          $ref: '#/responses/NotFound'
        '500':
          description: An unexpected error occurred.
          $ref: '#/responses/ServerError'
responses:
  OkIdAndStatus:
    description: Successful Request
    schema:
      $ref: '#/definitions/WorkflowIdAndStatus'
  OK:
    description: Successful Request
    schema:
      $ref: '#/definitions/WorkflowIdAndStatus'
  InvalidSubmission:
    description: Invalid submission request
  BadRequest:
    description: Malformed Workflow ID
  Forbidden:
    description: Workflow in terminal status
  NotFound:
    description: Workflow ID Not Found
  ServerError:
    description: Internal Error
parameters:
  singleId:
    name: id
    description: A workflow ID
    required: true
    type: string
    in: path
    pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
  workflowTypeParam:
    name: workflowType
    type: string
    description: The workflow language for the file you submitted. Cromwell currently supports WDL.
    enum: [WDL]
    required: false
    in: formData
  workflowTypeVersionParam:
    name: workflowTypeVersion
    description: The specification version for the workflow language being used. For WDL, Cromwell currently supports draft-2 and 1.0.
    required: false
    type: string
    enum: ["draft-2", "1.0"]
    in: formData
  versionParam:
    name: version
    description: Cromwell API Version
    required: true
    type: string
    in: path
    default: v1 # This really should be an enum but swagger-ui seems to not like it
definitions:
  WorkflowSubmitResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: 00001111-2222-3333-aaaa-bbbbccccdddd
      status:
        type: string
        description: The status of the workflow
        example: Submitted
  WorkflowIdAndStatus:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: 00001111-2222-3333-aaaa-bbbbccccdddd
      status:
        type: string
        description: The status of the workflow
        example: Submitted
  WorkflowMetadataResponse:
    description: Workflow and call level metadata
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
      submission:
        type: string
        format: date-time
        description: Submission datetime of the workflow in ISO8601 format with milliseconds
      start:
        type: string
        format: date-time
        description: Start datetime of the workflow in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the workflow in ISO8601 format with milliseconds
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      calls:
        $ref: '#/definitions/CallMetadata'
      failures:
        type: array
        items:
          $ref: '#/definitions/FailureMessage'
  CallMetadata:
    description: Call level metadata
    properties:
      inputs:
        type: object
        description: Mapping of input fully qualified names to stringified values
      executionStatus:
        type: string
        description: Status in Cromwell execution terms.
      backend:
        type: string
        description: The type of backend on which the call executed (e.g. JES, SGE, Local)
      backendStatus:
        type: string
        description: Status in backend-specific terms.  Currently this will only be defined for the JES backend.
      start:
        type: string
        format: date-time
        description: Start datetime of the call execution in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the call execution in ISO8601 format with milliseconds
      jobId:
        type: string
        description: Backend-specific job ID
      failures:
        type: array
        items:
          $ref: '#/definitions/FailureMessage'
      returnCode:
        type: integer
        description: Call execution return code
      stdout:
        type: string
        description: Path to the standard output file for this call
      stderr:
        type: string
        description: Path to the standard error file for this call
      backendLogs:
        type: object
        description: Paths to backend specific logs for this call
  FailureMessage:
    description: Failure messages
    properties:
      message:
        type: string
        description: The failure message
      causedBy:
        type: array
        items:
          $ref: '#/definitions/FailureMessage'
  WorkflowDescription:
    required:
      - valid
      - validWorkflow
      - errors
      - name
      - inputs
      - outputs
      - submittedDescriptorType
      - isRunnableWorkflow
    properties:
      valid:
        type: boolean
        description: Indicates that the workflow is valid and that the inputs, if provided, are compatible with the workflow.
      errors:
        type: array
        items:
          type: string
        example:
          - "The 'errors' field will be filled if 'valid' is false"
          - "We might also provide warnings to a 'valid' workflow here"
          - "Otherwise, 'errors' will be the empty array"
        description: The set of validation failure messages
      validWorkflow:
        type: boolean
        description: Indicates whether the workflow file is valid by itself. If inputs are provided, they are not considered when calculating this field; if inputs are not provided, the value is identical to `valid`.
      name:
        type: string
        description: For a source file with one workflow and zero or more tasks, the name of the workflow. For a single task, the name of the task. For a source file with multiple tasks but no workflows, the empty string.
      inputs:
        description: A list of inputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolInputParameter'
        example:
          - name: my_wf.string_input
            valueType:
              typeName: String
            optional: false
            default: null
            typeDisplayName: String
          - name: my_wf.array_input
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            optional: false
            default: null
            typeDisplayName: Array[String]
          - name: my_wf.optional_input
            valueType:
              typeName: Optional
              optionalType:
                typeName: String
            optional: true
            default: "hello"
            typeDisplayName: String?
          - name: my_wf.map_input
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            optional: false
            default: null
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_input
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            optional: false
            default: null
            typeDisplayName: Object
          - name: my_wf.int_string_pair_input
            valueType:
              typeName: Pair
              pairTypes:
                - leftType:
                    -  typeName: Int
                - rightType:
                    -  typeName: String
            optional: false
            default: null
            typeDisplayName: Pair[Int, String]
      outputs:
        description: A list of outputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolOutputParameter'
        example:
          - name: my_wf.string_output
            valueType:
              typeName: String
            typeDisplayName: String
          - name: my_wf.array_output
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            typeDisplayName: Array[String]
          - name: my_wf.map_output
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_output
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            typeDisplayName: Object
          - name: my_wf.int_string_pair_output
            valueType:
              typeName: Pair
              tupleTypes:
                - typeName: Int
                - typeName: String
            typeDisplayName: Pair[Int, String]
      images:
        type: array
        items:
          type: string
      submittedDescriptorType:
        $ref: '#/definitions/DescriptorTypeAndVersion'
      importedDescriptorTypes:
        type: array
        items:
          $ref: '#/definitions/DescriptorTypeAndVersion'
      meta:
        type: object
      parameterMeta:
        type: object
      isRunnableWorkflow:
        description: Indicates whether this file can be run on its own (e.g. a WDL workflow)
        type: boolean
  ToolInputParameter:
    type: object
    description: >-
      An input parameter for a tool or workflow.
    required:
      - name
      - valueType
      - optional
      - default
      - typeDisplayName
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
      optional:
        type: boolean
        description: Whether the tool allows this value to not be specified
      default:
        type: string
        description: The in-language expression used to evaluate a default value for this parameter, if
          none is supplied.
      typeDisplayName:
        type: string
        description: An easy-to-read display name for the type of the input
  ToolOutputParameter:
    type: object
    description: >-
      An output parameter for a tool or workflow.
    required:
      - name
      - valueType
      - typeDisplayName
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
      typeDisplayName:
        type: string
        description: An easy-to-read display name for the type of the output
  ValueType:
    description: The type expected for a given value.
    type: object
    required:
      - valueType
    maxProperties: 2
    properties:
      typeName:
        type: string
        description: The type of this value
        enum:
          - String
          - File
          - Directory
          - Float
          - Int
          - Boolean
          - Optional
          - Array
          - Tuple
          - Map
          - Object
          - Pair
      optionalType:
        $ref: '#/definitions/ValueType'
      arrayType:
        $ref: '#/definitions/ValueType'
      mapType:
        $ref: '#/definitions/MapValueType'
      tupleTypes:
        type: array
        items:
          $ref: '#/definitions/ValueType'
      objectFieldTypes:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            fieldType:
              $ref: '#/definitions/ValueType'
      nonEmpty:
        type: boolean
        description: Boolean representation of the contents in an array.
      pairType:
        type: object
        properties:
          leftType:
            $ref: '#/definitions/ValueType'
          rightType:
            $ref: '#/definitions/ValueType'
  MapValueType:
    type: object
    description: A type representing a map from one type to another.
    required:
      - keyType
      - valueType
    properties:
      keyType:
        $ref: '#/definitions/ValueType'
      valueType:
        $ref: '#/definitions/ValueType'
  DescriptorTypeAndVersion:
    type: object
    description: >-
      A workflow descriptor file type and version.
    required:
      - descriptorType
      - descriptorTypeVersion
    properties:
      descriptorType:
        $ref: '#/definitions/DescriptorType'
      descriptorTypeVersion:
        type: string
        example: "1.0"
  DescriptorType:
    type: string
    description: >-
      One from a list of descriptor type strings (e.g. WDL).
      Note that these files can also include associated Docker/container files
      and test parameters that further describe a version of a tool
    example: "WDL"
    enum:
      - WDL
  WorkflowQueryParameter:
    description: Workflow query parameters
    minProperties: 1
    maxProperties: 1
    properties:
      submission:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or later submission time. Can be specified at most once. If both submission time and start date are
          specified, submission time should be before or equal to start date.
      start:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or later start datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      end:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      status:
        type: string
        enum:
          - Submitted
          - Running
          - Aborting
          - Failed
          - Succeeded
          - Aborted
        description: >
          Returns only workflows with the specified status.  If specified multiple times,
          returns workflows in any of the specified statuses.
      name:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        description: >
          Returns only workflows with the specified name.  If specified multiple times,
          returns workflows with any of the specified names.
      id:
        type: string
        pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
        description: >
          Returns only workflows with the specified workflow id.  If specified multiple times,
          returns workflows with any of the specified workflow ids.
      excludeLabelAnd:
        type: string
        format: array
        pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Excludes workflows with the specified label.  If specified multiple times,
          excludes workflows with all of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      excludeLabelOr:
        type: string
        format: array
        pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Excludes workflows with the specified label.  If specified multiple times,
          excludes workflows with any of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      includeSubworkflows:
        type: string
        format: boolean
        description: Include subworkflows in results. By default, it is taken as true.
      page:
        type: integer
        description: When pageSize is set, which page of results to return. If not set, the first page of 'pageSize' results will be returned.
      pageSize:
        type: integer
        description: The number of results to return at a time
  WorkflowQueryResponse:
    description: Response to a workflow query
    required:
      - results
      - totalResultsCount
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/WorkflowQueryResult'
      totalResultsCount:
        type: integer
  WorkflowQueryResult:
    description: Result for an individual workflow returned by a workflow query
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: Workflow ID
      name:
        type: string
        description: Workflow name
      status:
        type: string
        description: Workflow status
      submission:
        type: string
        format: date-time
        description: Workflow submission datetime
      metadataArchiveStatus:
        type: string
        description: Status in metadata archives
      start:
        type: string
        format: date-time
        description: Workflow start datetime
      end:
        type: string
        format: date-time
        description: Workflow end datetime
  BackendResponse:
    required:
      - supportedBackends
      - defaultBackend
    properties:
      supportedBackends:
        type: array
        description: The backends supported by this server
        items:
          type: string
      defaultBackend:
        type: string
        description: The default backend of this server
  VersionResponse:
    description: Returns the version of Cromwell
    properties:
      cromwell:
        type: string
        description: The version of the Cromwell Engine
        example: 30
  StatusResponse:
    description: Returns the status of monitored subsystems.
    type: object
    properties:
      serviceName:
        type: object
        properties:
          ok:
            type: boolean
          messages:
            type: array
            items:
              type: string
  LabelsResponse:
    required:
      - id
      - labels
    properties:
      id:
        type: string
        description: The identifier of the workflow
        example: label-key-1
      labels:
        type: string
        description: The labels which have been updated
        example: label-value-1
  DefaultWorkflowEngineParameter:
    title: DefaultWorkflowEngineParameter
    type: object
    properties:
      name:
        type: string
        description: The name of the parameter
      type:
        type: string
        description: 'Describes the type of the parameter, e.g. float.'
      default_value:
        type: string
        description: The stringified version of the default parameter. e.g. "2.45".
    description: >-
      A message that allows one to describe default parameters for a workflow
      engine.
  Log:
    title: Log
    type: object
    properties:
      name:
        type: string
        description: The task or workflow name
      cmd:
        type: array
        items:
          type: string
        description: The command line that was executed
      start_time:
        type: string
        description: >-
          When the command started executing, in ISO 8601 format
          "%Y-%m-%dT%H:%M:%SZ"
      end_time:
        type: string
        description: >-
          When the command stopped executing (completed, failed, or
          cancelled), in ISO 8601 format "%Y-%m-%dT%H:%M:%SZ"
      stdout:
        type: string
        description: >-
          A URL to retrieve standard output logs of the workflow run or task. 
          This URL may change between status requests, or may not be available
          until the task or workflow has finished execution.  Should be
          available using the same credentials used to access the WES
          endpoint.
      stderr:
        type: string
        description: >-
          A URL to retrieve standard error logs of the workflow run or task. 
          This URL may change between status requests, or may not be available
          until the task or workflow has finished execution.  Should be
          available using the same credentials used to access the WES
          endpoint.
      exit_code:
        type: integer
        description: Exit code of the program
        format: int32
    description: Log and other info
  ServiceInfo:
    title: ServiceInfo
    allOf:
      - $ref: '#/definitions/Service'
      - type: object
        properties:
          workflow_type_versions:
            type: object
            additionalProperties:
              $ref: '#/definitions/WorkflowTypeVersion'
          supported_wes_versions:
            type: array
            items:
              type: string
            description: The version(s) of the WES schema supported by this service
          supported_filesystem_protocols:
            type: array
            items:
              type: string
            description: >-
              The filesystem protocols supported by this service, currently
              these may include common protocols using the terms 'http',
              'https', 'sftp', 's3', 'gs', 'file', or 'synapse', but others 
              are possible and the terms beyond these core protocols are
              currently not fixed.   This section reports those protocols
              (either common or not) supported by this WES service.
          workflow_engine_versions:
            type: object
            additionalProperties:
              type: string
          default_workflow_engine_parameters:
            type: array
            items:
              $ref: '#/definitions/DefaultWorkflowEngineParameter'
            description: >-
              Each workflow engine can present additional parameters that can
              be sent to the workflow engine. This message will list the
              default values, and their types for each workflow engine.
          system_state_counts:
            type: object
            additionalProperties:
              type: integer
              format: int64
          auth_instructions_url:
            type: string
            description: >-
              A web page URL with human-readable instructions on how to get an
              authorization token for use with a specific WES endpoint.
          tags:
            type: object
            additionalProperties:
              type: string
              description: >-
                A message containing useful information about the running
                service, including supported versions and default settings.
        required:
          - workflow_type_versions
          - supported_wes_versions
          - supported_filesystem_protocols
          - workflow_engine_versions
          - default_workflow_engine_parameters
          - system_state_counts
          - auth_instructions_url
          - tags
  State:
    title: State
    enum:
      - UNKNOWN
      - QUEUED
      - INITIALIZING
      - RUNNING
      - PAUSED
      - COMPLETE
      - EXECUTOR_ERROR
      - SYSTEM_ERROR
      - CANCELED
      - CANCELING
    type: string
    description: >-
      - UNKNOWN: The state of the task is unknown. This provides a safe
      default for messages where this field is missing, for example, so that a
      missing field does not accidentally imply that the state is QUEUED.


       - QUEUED: The task is queued.


      - INITIALIZING: The task has been assigned to a worker and is currently
      preparing to run. For example, the worker may be turning on, downloading
      input files, etc.


      - RUNNING: The task is running. Input files are downloaded and the first
      Executor has been started.


      - PAUSED: The task is paused. An implementation may have the ability to
      pause a task, but this is not required.


       - COMPLETE: The task has completed running. Executors have exited without error
      and output files have been successfully uploaded.


       - EXECUTOR_ERROR: The task encountered an error in one of the Executor processes. Generally,
      this means that an Executor exited with a non-zero exit code.


       - SYSTEM_ERROR: The task was stopped due to a system error, but not from an Executor,
      for example an upload failed due to network issues, the worker's ran out
      of disk space, etc.


       - CANCELED: The task was canceled by the user.


        - CANCELING: The task was canceled by the user, and is in the process of stopping.
  RunListResponse:
    title: RunListResponse
    type: object
    properties:
      runs:
        type: array
        items:
          $ref: '#/definitions/RunStatus'
        description: >-
          A list of workflow runs that the service has executed or is
          executing. The list is filtered to only include runs that the caller
          has permission to see.
      next_page_token:
        type: string
        description: >-
          A token which may be supplied as `page_token` in workflow run list
          request to get the next page of results.  An empty string indicates
          there are no more items to return.
    description: >-
      The service will return a RunListResponse when receiving a successful
      RunListRequest.
  RunLog:
    title: RunLog
    type: object
    properties:
      run_id:
        type: string
        description: workflow run ID
      request:
        $ref: '#/definitions/RunRequest'
      state:
        $ref: '#/definitions/State'
      run_log:
        $ref: '#/definitions/Log'
      task_logs:
        type: array
        items:
          $ref: '#/definitions/Log'
        description: >-
          The logs, and other key info like timing and exit code, for each
          step in the workflow run.
      outputs:
        type: object
        description: The outputs from the workflow run.
  RunRequest:
    title: RunRequest
    type: object
    properties:
      workflow_params:
        type: object
        description: >-
          REQUIRED
          The workflow run parameterizations (JSON encoded), including input
          and output file locations
      workflow_type:
        type: string
        description: >-
          REQUIRED
          The workflow descriptor type, must be "WDL" currently (or
          another alternative supported by this WES instance)
      workflow_type_version:
        type: string
        description: >-
          REQUIRED
          The workflow descriptor type version, must be one supported by this
          WES instance
      tags:
        type: object
        additionalProperties:
          type: string
      workflow_engine_parameters:
        type: object
        additionalProperties:
          type: string
      workflow_url:
        type: string
        description: >-
          REQUIRED
          The workflow WDL document. When `workflow_attachments` is
          used to attach files, the `workflow_url` may be a relative path to
          one of the attachments.
    description: >-
      To execute a workflow, send a run request including all the details
      needed to begin downloading and executing a given workflow.
  RunId:
    title: RunId
    type: object
    properties:
      run_id:
        type: string
        description: workflow run ID
  RunStatus:
    title: RunStatus
    required:
      - run_id
    type: object
    properties:
      run_id:
        type: string
      state:
        $ref: '#/definitions/State'
    description: 'Small description of a workflow run, returned by server during listing'
  WorkflowTypeVersion:
    title: WorkflowTypeVersion
    type: object
    properties:
      workflow_type_version:
        type: array
        items:
          type: string
        description: an array of one or more acceptable types for the `workflow_type`
    description: Available workflow types supported by a given instance of the service.
  ServiceType:
    description: Type of a GA4GH service
    type: object
    required:
      - group
      - artifact
      - version
    properties:
      group:
        type: string
        description: >-
          Namespace in reverse domain name format. Use `org.ga4gh` for
          implementations compliant with official GA4GH specifications. For
          services with custom APIs not standardized by GA4GH, or
          implementations diverging from official GA4GH specifications, use a
          different namespace (e.g. your organization's reverse domain name).
        example: org.ga4gh
      artifact:
        type: string
        description: >-
          Name of the API or GA4GH specification implemented. Official GA4GH
          types should be assigned as part of standards approval process.
          Custom artifacts are supported.
        example: beacon
      version:
        type: string
        description: >-
          Version of the API or specification. GA4GH specifications use
          semantic versioning.
        example: 1.0.0
  Service:
    description: GA4GH service
    type: object
    required:
      - id
      - name
      - type
      - organization
      - version
    properties:
      id:
        type: string
        description: >-
          Unique ID of this service. Reverse domain name notation is
          recommended, though not required. The identifier should attempt to
          be globally unique so it can be used in downstream aggregator
          services e.g. Service Registry.
        example: org.ga4gh.myservice
      name:
        type: string
        description: Name of this service. Should be human readable.
        example: My project
      type:
        $ref: '#/definitions/ServiceType'
      description:
        type: string
        description: >-
          Description of the service. Should be human readable and provide
          information about the service.
        example: This service provides...
      organization:
        type: object
        description: Organization providing the service
        required:
          - name
          - url
        properties:
          name:
            type: string
            description: Name of the organization responsible for the service
            example: My organization
          url:
            type: string
            format: uri
            description: URL of the website of the organization (RFC 3986 format)
            example: 'https://example.com'
      contactUrl:
        type: string
        format: uri
        description: >-
          URL of the contact for the provider of this service, e.g. a link to
          a contact form (RFC 3986 format), or an email (RFC 2368 format).
        example: 'mailto:support@example.com'
      documentationUrl:
        type: string
        format: uri
        description: >-
          URL of the documentation of this service (RFC 3986 format). This
          should help someone learn how to use your service, including any
          specifics required to access data, e.g. authentication.
        example: 'https://docs.myservice.example.com'
      createdAt:
        type: string
        format: date-time
        description: >-
          Timestamp describing when the service was first deployed and
          available (RFC 3339 format)
        example: '2019-06-04T12:58:19Z'
      updatedAt:
        type: string
        format: date-time
        description: >-
          Timestamp describing when the service was last updated (RFC 3339
          format)
        example: '2019-06-04T12:58:19Z'
      environment:
        type: string
        description: >-
          Environment the service is running in. Use this to distinguish
          between production, development and testing/staging deployments.
          Suggested values are prod, test, dev, staging. However this is
          advised and not enforced.
        example: test
      version:
        type: string
        description: >-
          Version of the service being described. Semantic versioning is
          recommended, but other identifiers, such as dates or commit hashes,
          are also allowed. The version should be changed whenever the service
          is updated.
        example: 1.0.0
