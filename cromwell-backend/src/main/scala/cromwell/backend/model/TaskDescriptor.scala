package cromwell.backend.model

import wdl4s.TaskOutput
import wdl4s.command.CommandPart
import wdl4s.values.WdlValue

/**
  * Represents basic data needed to execute a task in a defined backend.
 *
  * @param name Task name.
  * @param user User who want to execute the task.
  * @param commandTemplate Arguments for the execution.
  * @param workingDir Task working directory.
  * @param outputs Outputs generated by the execution.
  * @param runtimeAttributes Configuration needed at runtime in order to execute a task.
  */
case class TaskDescriptor(name: String,
                          user: String,
                          commandTemplate: Seq[CommandPart], //TODO: Should be Wdl Agnostic
                          declarations: Seq[wdl4s.Declaration], //TODO: Should be Wdl Agnostic
                          workingDir: String,
                          inputs: Map[String, WdlValue], //TODO: extract WdlValue from cromwell-backend lib.
                          outputs: Seq[TaskOutput], //TODO: extract TaskOutput from cromwell-backend lib.
                          runtimeAttributes: Map[String, String])