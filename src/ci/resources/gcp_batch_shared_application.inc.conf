include required(classpath("application.conf"))
include "build_application.inc.conf"
include "gcp_batch_application.inc.conf"

services {
  HealthMonitor.config {
    check-gcpbatch-backends: [
      "GCPBATCH",
    ]
  }
}

backend {
  default = "GCPBATCH"
  # pseudo GCPBATCH backends referenced in Centaur test files:
  # GCPBATCH_ALT: a GCPBATCH version of a PAPI v2 test exists, usually having the same name as the PAPI v2 test file with a "gcpbatch_" prefix.
  # GCPBATCH_NEEDS_ALT: a GCPBATCH alt of a PAPI v2 test is needed but does not yet exist.
  # GCPBATCH_FAIL: a test is failing on GCPBATCH, reasons may or may not be understood yet.
  # GCPBATCH_SKIP: test is not going to be run on GCPBATCH for reasons explained in test comments.
  enabled = ["GCPBATCH"]
  providers {
    # Default gcp batch backend
    GCPBATCH {
      actor-factory = "cromwell.backend.google.batch.GcpBatchBackendLifecycleActorFactory"
      config {
        # When importing: Remember to also include an appropriate provider_config.inc.conf here.

        # TODO: Should not need because already included.  testing.
        include "gcp_batch_provider_config.inc.conf"

        include "dockerhub_provider_config_v2.inc.conf"
        # This SA does not have permission to bill this project when accessing RP buckets.
        # This is on purpose so that we can assert the failure (see requester_pays_localization_negative)
        batch.compute-service-account = "centaur@broad-dsde-cromwell-dev.iam.gserviceaccount.com"
        filesystems.http {}
      }
    }
  }
}
