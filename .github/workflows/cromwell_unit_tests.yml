name: 'Cromwell unit tests'

#This github action runs all of Cromwell's unit tests.
#A matrix strategy is used so that each subproject can be unit tested in parallel with all other subprojects. 

#This is what shows up in the github workflows page as the title. 
run-name: ${{ github.actor }} running Cromwell sbt unit tests.

#What will trigger the workflow to run. 
on:
  workflow_dispatch: #Manual trigger from GitHub UI
  push:
  pull_request: 

permissions: 
  contents: read

#This job is spawned once for each subproject in the matrix below. Each iteration will set up a cache, git secrets, and java before running unit tests for that subproject.
jobs:
  build-and-test: 
    strategy:
      fail-fast: false #Disabling fail fast means that even if one job in the matrix fails, the others will still try to complete.
      matrix: #this array is the output of the command `sbt projects` from the cromwell root directory, minus a bunch of superflous formatting that sbt adds.
        sbtSubProject: [awsBackend,
                        awsS3FileSystem,
                        azureBlobFileSystem,
                        backend,
                        centaur,
                        cloud-nio-impl-drs,
                        cloud-nio-impl-ftp,
                        cloud-nio-spi,
                        cloud-nio-util,
                        cloudSupport,
                        common,
                        core,
                        cromiam,
                        cromwell-drs-localizer,
                        cromwellApiClient,
                        databaseMigration,
                        databaseSql,
                        dockerHashing,
                        drsFileSystem,
                        engine,
                        ftpFileSystem,
                        gcsFileSystem,
                        googlePipelinesCommon,
                        googlePipelinesV2Alpha1,
                        googlePipelinesV2Beta,
                        httpFileSystem,
                        languageFactoryCore,
                        perf,
                        server,
                        services,
                        sfsBackend,
                        sraFileSystem,
                        tesBackend,
                        wdlBiscayneLanguageFactory,
                        wdlDraft2LanguageFactory,
                        wdlDraft3LanguageFactory,
                        wdlModelBiscayne,
                        wdlModelDraft2,
                        wdlModelDraft3,
                        wdlNewBaseTransforms,
                        wdlSharedModel,
                        wdlSharedTransforms,
                        wdlTransformsBiscayne,
                        wdlTransformsDraft2,
                        wdlTransformsDraft3,
                        wes2cromwell,
                        wom,
                        womtool]

    #This action is using a Github free runner, rather than a Broad self-hosted one. This is because the Broad ones don't have sbt installed by default.
    runs-on: ubuntu-latest

    steps:
    	- uses: actions/checkout@v3 # required first to checkout the repo
	    - uses: ./.github/set_up_cromwell_action

    #Parse the sbt-generated list of projects into a YAML array. Note that we strip
    #invisible color codes out of the `sbt projects` output.
    - name: Do the thing
      run: |
        echo "SBT_PROJECTS=$(sbt projects | sed 's/\x1b\[[0-9;]*m//g' | sed -e 's/^\[info\]\s*\([-_A-Za-z0-9]*\)$/\1/g' | grep -v '^\[info\].*' | tr '\n', ',' | sed 's/^/[/' | sed 's/.$/]\n/')" >> $GITHUB_ENV

    - name: Test the thing
      run: |
        echo ${{ env.SBT_PROJECTS }}

    #Invoke SBT on a specific subproject, asking it to run all unit tests contained within that subproject.
    - name: Run tests
      run: |
        set -e
        sbt "${{ matrix.sbtSubProject }}/test"