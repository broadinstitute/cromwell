swagger: '2.0'
info:
  title: CromIam
  description: Cromwell's Bouncer
  contact:
    email: dsde@broadinstitute.org
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  termsOfService: 'http://www.github.com/broadinstitute/cromiam'
  version: ''
produces:
  - application/json
security:
  - googleoauth:
      - openid
      - email
      - profile

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization

paths:
  '/api/workflows/{version}/{id}/abort':
    post:
      summary: Abort a workflow based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowAbortResponse'
        '400':
          description: Malformed Workflow ID
        '403':
          description: Workflow in terminal status
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}':
    post:
      summary: Submit a new workflow for execution
      consumes:
        - multipart/form-data
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: workflowSource
          description: WDL Source. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowInputs
          description: WDL Inputs JSON, 1
          required: false
          type: file
          in: formData
        - name: workflowInputs_2
          description: WDL Inputs JSON, 2
          required: false
          type: file
          in: formData
        - name: workflowInputs_3
          description: WDL Inputs JSON, 3
          required: false
          type: file
          in: formData
        - name: workflowInputs_4
          description: WDL Inputs JSON, 4
          required: false
          type: file
          in: formData
        - name: workflowInputs_5
          description: WDL Inputs JSON, 5
          required: false
          type: file
          in: formData
        - name: workflowOptions
          description: Workflow Options JSON
          required: false
          type: file
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: collectionName
          description: Collection name for this workflow
          required: false
          type: string
          in: formData
        - name: labels
          description: Custom Labels JSON
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: Zip file containing WDL dependencies
          required: false
          type: file
          in: formData
      tags:
        - Workflows
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowSubmitResponse'
        '400':
          description: Malformed Input
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/batch':
    post:
      summary: Submit a batch of new workflows for execution
      consumes:
        - multipart/form-data
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: workflowSource
          description: WDL Source. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowOnHold
          description: Put workflow on hold upon submission. By default, it is taken as false.
          required: false
          type: boolean
          in: formData
        - name: workflowInputs
          description: WDL Inputs JSON as an array
          required: true
          type: file
          in: formData
        - name: workflowOptions
          description: Workflow Options JSON
          required: false
          type: file
          in: formData
        - name: labels
          description: Custom Labels JSON
          required: false
          type: file
          in: formData
        - name: workflowDependencies
          description: Zip file containing WDL dependencies
          required: false
          type: file
          in: formData
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowSubmitResponse'
        '400':
          description: Malformed Input
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/outputs':
    get:
      summary: Query for workflow outputs based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/labels':
    patch:
      summary: Add new labels or update values for existing label keys by workflow id.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: labels
          description: >
            Custom labels submitted as JSON.
            Example: {"key-1":"value-1","key-2":"value-2"}
          required: true
          in: body
          schema:
            type: object
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/query':
    get:
      summary: Query workflows by start dates, end dates, names, ids, or statuses.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: start
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later start datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: end
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: status
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - Submitted
            - Running
            - Aborting
            - Failed
            - Succeeded
            - Aborted
          description: >
            Returns only workflows with the specified status.  If specified multiple times,
            returns workflows in any of the specified statuses.
        - name: name
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          description: >
            Returns only workflows with the specified name.  If specified multiple times,
            returns workflows with any of the specified names.
        - name: id
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
          description: >
            Returns only workflows with the specified workflow id.  If specified multiple times,
            returns workflows with any of the specified workflow ids.
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '403':
          description: Malformed Request
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
    post:
      summary: Query workflows by start dates, end dates, names, ids, or statuses.
      parameters:
        - name: version
          description: API version
          required: true
          type: string
          in: path
          default: v1
        - name: parameters
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowQueryParameter'
          description: >
            Same query parameters as GET /query endpoint, submitted as a json list.
            Example: [{"status":"Success"},{"status":"Failed"}]
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '400':
          description: Malformed Request
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/status':
    get:
      summary: Query for workflow status based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowStatusResponse'
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/releaseHold':
    post:
      summary: Switch a workflow from 'On Hold' to 'Submitted' status
      description: Request Cromwell to release the hold on a workflow. It will switch the status of a workflow from 'On Hold' to 'Submitted' so it can be picked for running. For instance this might be necessary in cases where you have submitted a workflow with workflowOnHold = true.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: A workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowStatusResponse'
        '400':
          description: Malformed Workflow ID
        '403':
          description: Malformed Request
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/logs':
    get:
      summary: Query for the standard output and error of all calls in a workflow
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/{id}/metadata':
    get:
      summary: Query for workflow and call-level metadata for a specified workflow
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: includeKey
          description: >
            When specified key(s) to include from the metadata. Matches any key starting with the value. May not be
            used with excludeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: excludeKey
          description: >
            When specified key(s) to exclude from the metadata. Matches any key starting with the value. May not be
            used with includeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: expandSubWorkflows
          description: >
            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
          required: false
          type: boolean
          default: false
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
          examples:
            application/json: |-
              {
                "workflowName": "example",
                "calls": {
                  "example.gather": [{
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stdout",
                    "shardIndex": -1,
                    "outputs": {
                      "str": "_one_\n_two_\n_three_\n_four_"
                    },
                    "inputs": {
                      "array": "analysis.out"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:23.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stderr",
                    "executionEvents": [{
                      "description": "execution event - only one in this call, some calls might have none!",
                      "startTime": "2015-12-11T16:53:23.000-05:00",
                      "endTime": "2015-12-11T16:53:23.000-05:00"
                    }],
                    "start": "2015-12-11T16:53:23.000-05:00"
                  }],
                  "example.prepare": [{
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stdout",
                    "shardIndex": -1,
                    "outputs": {
                      "array": ["one", "two", "three", "four"]
                    },
                    "inputs": {

                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:22.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stderr",
                    "executionEvents": [],
                    "start": "2015-12-11T16:53:21.000-05:00"
                  }],
                  "example.analysis": [{
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stdout",
                    "shardIndex": 0,
                    "outputs": {
                      "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt"
                    },
                    "inputs": {
                      "str": "x"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:23.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stderr",
                    "executionEvents": [],
                    "start": "2015-12-11T16:53:22.000-05:00"
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stdout",
                    "shardIndex": 1,
                    "outputs": {
                      "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt"
                    },
                    "inputs": {
                      "str": "x"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:23.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stderr",
                    "executionEvents": [],
                    "start": "2015-12-11T16:53:22.000-05:00"
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stdout",
                    "shardIndex": 2,
                    "outputs": {
                      "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt"
                    },
                    "inputs": {
                      "str": "x"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:23.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stderr",
                    "executionEvents": [],
                    "start": "2015-12-11T16:53:22.000-05:00"
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stdout",
                    "shardIndex": 3,
                    "outputs": {
                      "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt"
                    },
                    "inputs": {
                      "str": "x"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "end": "2015-12-11T16:53:23.000-05:00",
                    "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stderr",
                    "executionEvents": [],
                    "start": "2015-12-11T16:53:22.000-05:00"
                  }]
                },
                "outputs": {
                  "example.analysis.out": ["/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt"],
                  "example.gather.str": "_one_\n_two_\n_three_\n_four_",
                  "example.prepare.array": ["one", "two", "three", "four"]
                },
                "id": "e552029e-4b9a-48e9-b11f-6e5d6d0dccc4",
                "inputs": {
                  "test.hello.name": "chris",
                  "blah2.grep.pattern": "h",
                  "blah2.cat.asdf": "gs://cromwell-root/blah/c0c116ef-aac6-4029-8d0a-70d86b17c843/call-ls/job.stdout.txt",
                  "blah.grep.pattern": "v",
                  "blah.ls.pattern": "./"
                },
                "submission": "2015-12-11T16:53:21.000-05:00",
                "status": "Succeeded",
                "end": "2015-12-11T16:53:23.000-05:00",
                "start": "2015-12-11T16:53:21.000-05:00"
              }
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/callcaching/diff':
    get:
      summary: Return the hash differential between two calls
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: workflowA
          description: Workflow Id of the first workflow
          required: true
          type: string
          in: query
        - name: callA
          description: Call FQN (including workflow name) of the first call
          required: true
          type: string
          in: query
        - name: indexA
          description: Index of the first call
          required: false
          type: int
          in: query
        - name: workflowB
          description: Workflow Id of the second workflow
          required: true
          type: string
          in: query
        - name: callB
          description: Call FQN (including workflow name) of the second call
          required: true
          type: string
          in: query
        - name: indexB
          description: Index of the second call
          required: false
          type: int
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed query parameters
        '404':
          description: No matching cache entry
        '500':
          description: Internal Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/workflows/{version}/backends':
    get:
      summary: Returns the backends supported by this Cromwell.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/BackendResponse'
      security:
        - googleoauth:
          - openid
          - email
          - profile
  '/api/womtool/{version}/describe':
    post:
      operationId: describe
      summary: Machine-readable description of a workflow, including inputs and outputs
      consumes:
        - multipart/form-data
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: workflowSource
          description: The workflow source file to submit for execution. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowInputs
          description: JSON or YAML file containing the inputs as an object.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - $ref: '#/parameters/workflowTypeVersionParam'
      responses:
        '200':
          description: Workflow description.
          schema:
            $ref: '#/definitions/WorkflowDescription'
      tags:
        - "Womtool"
  '/engine/{version}/version':
    get:
      summary: Returns the version of the Cromwell Engine
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
      tags:
        - Engine
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/VersionResponse'
  '/engine/{version}/status':
        get:
          summary: Returns the current health status of any monitored subsystems
          parameters:
            - name: version
              description: API Version
              required: true
              type: string
              in: path
              default: v1
          tags:
            - Engine
          responses:
            '200':
              description: All subsystems report an "ok" status
              schema:
                $ref: '#/definitions/StatusResponse'
            '500':
              description: At least one subsystem does not have an "ok" status
              schema:
                $ref: '#/definitions/StatusResponse'

parameters:
  workflowTypeParam:
    name: workflowType
    type: string
    description: The workflow language for the file you submitted. Cromwell currently supports WDL and CWL.
    enum: [WDL, CWL]
    required: false
    in: formData
  workflowTypeVersionParam:
    name: workflowTypeVersion
    description: The specification version for the workflow language being used. For WDL, Cromwell currently supports draft-2 and 1.0. For CWL, Cromwell currently supports v1.0.
    required: false
    type: string
    enum: ["draft-2", "1.0", "v1.0"]
    in: formData
  versionParam:
    name: version
    description: Cromwell API Version
    required: true
    type: string
    in: path
    default: v1 # This really should be an enum but swagger-ui seems to not like it

definitions:
  WorkflowSubmitResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowAbortResponse:

    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowStatusResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowMetadataResponse:
    description: Workflow and call level metadata
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
      submission:
        type: string
        format: date-time
        description: Submission datetime of the workflow in ISO8601 format with milliseconds
      start:
        type: string
        format: date-time
        description: Start datetime of the workflow in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the workflow in ISO8601 format with milliseconds
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      calls:
        $ref: '#/definitions/CallMetadata'
      failures:
        $ref: '#/definitions/FailureMessage'
  CallMetadata:
    description: Call level metadata
    required:
      - inputs
      - executionStatus
    properties:
      inputs:
        type: object
        description: Mapping of input fully qualified names to stringified values
      executionStatus:
        type: string
        description: Status in Cromwell execution terms.
      backend:
        type: string
        description: The type of backend on which the call executed (e.g. JES, SGE, Local)
      backendStatus:
        type: string
        description: Status in backend-specific terms.  Currently this will only be defined for the JES backend.
      start:
        type: string
        format: date-time
        description: Start datetime of the call execution in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the call execution in ISO8601 format with milliseconds
      jobId:
        type: string
        description: Backend-specific job ID
      failures:
        $ref: '#/definitions/FailureMessage'
      returnCode:
        type: integer
        description: Call execution return code
      stdout:
        type: string
        description: Path to the standard output file for this call
      stderr:
        type: string
        description: Path to the standard error file for this call
      backendLogs:
        type: object
        description: Paths to backend specific logs for this call
  FailureMessage:
    description: Failure messages
    required:
      - failure
      - timestamp
    properties:
      failure:
        type: string
        description: The failure message
      timestamp:
        type: string
        format: date-time
        description: The time at which this failure occurred
  WorkflowDescription:
    required:
      - valid
      - errors
      - name
      - inputs
      - outputs
      - submittedDescriptorType
    properties:
      valid:
        type: boolean
        description: Whether the workflow and inputs as submitted passed validation
      errors:
        type: array
        items:
          type: string
        example:
          - "The 'errors' field will be filled if 'valid' is false"
          - "We might also provide warnings to a 'valid' workflow here"
          - "Otherwise, 'errors' will be the empty array"
        description: The set of validation failure messages
      name:
        type: string
        description: For a source file with one workflow and zero or more tasks, the name of the workflow. For a single task, the name of the task. For a source file with multiple tasks but no workflows, the empty string.
      inputs:
        description: A list of inputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolInputParameter'
        example:
          - name: my_wf.string_input
            valueType:
              typeName: String
            optional: false
            default: null
            typeDisplayName: String
          - name: my_wf.array_input
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            optional: false
            default: null
            typeDisplayName: Array[String]
          - name: my_wf.optional_input
            valueType:
              typeName: Optional
              optionalType:
                typeName: String
            optional: true
            default: "hello"
            typeDisplayName: String?
          - name: my_wf.map_input
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            optional: false
            default: null
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_input
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            optional: false
            default: null
            typeDisplayName: Object
          - name: my_wf.int_string_pair_input
            valueType:
              typeName: Pair
              pairTypes:
                - leftType:
                    - typeName: Int
                - rightType:
                    - typeName: String
            optional: false
            default: null
            typeDisplayName: Pair[Int, String]
      outputs:
        description: A list of outputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolOutputParameter'
        example:
          - name: my_wf.string_output
            valueType:
              typeName: String
            typeDisplayName: String
          - name: my_wf.array_output
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            typeDisplayName: Array[String]
          - name: my_wf.map_output
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_output
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            typeDisplayName: Object
          - name: my_wf.int_string_pair_output
            valueType:
              typeName: Pair
              tupleTypes:
                - typeName: Int
                - typeName: String
            typeDisplayName: Pair[Int, String]
      submittedDescriptorType:
        $ref: '#/definitions/DescriptorTypeAndVersion'
  ToolInputParameter:
    type: object
    description: >-
      An input parameter for a tool or workflow.
    required:
      - name
      - valueType
      - optional
      - default
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
      optional:
        type: boolean
        description: Whether the tool allows this value to not be specified
      default:
        type: string
        description: The in-language expression used to evaluate a default value for this parameter, if
          none is supplied.
  ToolOutputParameter:
    type: object
    description: >-
      An output parameter for a tool or workflow.
    required:
      - name
      - valueType
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
  ValueType:
    description: The type expected for a given value.
    type: object
    required:
      - valueType
    maxProperties: 2
    properties:
      typeName:
        type: string
        description: The type of this value
        enum:
          - String
          - File
          - Directory
          - Float
          - Int
          - Boolean
          - Optional
          - Array
          - Tuple
          - Map
          - Object
      optionalType:
        $ref: '#/definitions/ValueType'
      arrayType:
        $ref: '#/definitions/ValueType'
      mapType:
        $ref: '#/definitions/MapValueType'
      tupleTypes:
        type: array
        items:
          $ref: '#/definitions/ValueType'
      objectFieldTypes:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            fieldType:
              $ref: '#/definitions/ValueType'
  MapValueType:
    type: object
    description: A type representing a map from one type to another.
    required:
      - keyType
      - valueType
    properties:
      keyType:
        $ref: '#/definitions/ValueType'
      valueType:
        $ref: '#/definitions/ValueType'
  DescriptorTypeAndVersion:
    type: object
    description: >-
      A workflow descriptor file type and version.
    required:
      - descriptorType
      - descriptorTypeVersion
    properties:
      descriptorType:
        $ref: '#/definitions/DescriptorType'
      descriptorTypeVersion:
        type: string
        example: "1.0"
  DescriptorType:
    type: string
    description: >-
      One from a list of descriptor type strings (e.g. CWL, WDL).
      Note that these files can also include associated Docker/container files
      and test parameters that further describe a version of a tool
    example: "WDL"
    enum:
      - CWL
      - WDL
  WorkflowQueryParameter:
    description: Workflow query parameters
    minProperties: 1
    maxProperties: 1
    properties:
      start:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or later start datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      end:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      status:
        type: string
        enum:
          - Submitted
          - Running
          - Aborting
          - Failed
          - Succeeded
          - Aborted
        description: >
          Returns only workflows with the specified status.  If specified multiple times,
          returns workflows in any of the specified statuses.
      name:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        description: >
          Returns only workflows with the specified name.  If specified multiple times,
          returns workflows with any of the specified names.
      id:
        type: string
        pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
        description: >
          Returns only workflows with the specified workflow id.  If specified multiple times,
          returns workflows with any of the specified workflow ids.
  WorkflowQueryResponse:
    description: Response to a workflow query
    required:
      - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/WorkflowQueryResult'
  WorkflowQueryResult:
    description: Result for an individual workflow returned by a workflow query
    required:
      - id
      - name
      - status
      - start
    properties:
      id:
        type: string
        description: Workflow ID
      name:
        type: string
        description: Workflow name
      status:
        type: string
        description: Workflow status
      start:
        type: string
        format: date-time
        description: Workflow start datetime
      end:
        type: string
        format: date-time
        description: Workflow end datetime
  BackendResponse:
    required:
      - supportedBackends
      - defaultBackend
    properties:
      supportedBackends:
        type: array
        description: The backends supported by this server
        items:
          type: string
      defaultBackend:
        type: string
        description: The default backend of this server
  VersionResponse:
    description: Returns the version of Cromwell
    properties:
      cromwell:
        type: string
        description: The version of the Cromwell Engine
  StatusResponse:
    description: Returns the status of monitored subsystems.
    type: object
    properties:
      serviceName:
        type: object
        properties:
          ok:
            type: boolean
          messages:
            type: array
            items:
              type: string
  LabelsResponse:
    required:
      - id
      - labels
    properties:
      id:
        type: string
        description: The identifier of the workflow
      labels:
        type: string
        description: The custom labels as json
