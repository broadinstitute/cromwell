# This is an example of how you can use the the HtCondor backend with Cromwell.
# *This is not a complete configuration file!* The
# content here should be copy pasted into the backend -> providers section
# of the cromwell.examples.conf in the root of the repository. You should
# uncomment lines that you want to define, and read carefully to customize
# the file. If you have any questions, please open an issue at
# https://www.github.com/broadinstitute/cromwell/issues

# Documentation
# https://cromwell.readthedocs.io/en/stable/backends/HTcondor/

backend {
  default = HtCondor

  providers {
    HtCondor {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
          Int cpu = 1
          Float memory_mb = 512.0
          Float disk_kb = 256000.0
          String? nativeSpecs
          String? docker
        """

        # If an 'exit-code-timeout-seconds' value is specified:
        # - check-alive will be run at this interval for every job
        # - if a job is found to be not alive, and no RC file appears after this interval
        # - Then it will be marked as Failed.
        # Warning: If set, Cromwell will run 'check-alive' for every job at this interval

        # exit-code-timeout-seconds = 120

        submit = """
          chmod 755 ${script}
          cat > ${cwd}/execution/submitFile <<EOF
          Iwd=${cwd}/execution
          requirements=${nativeSpecs}
          leave_in_queue=true
          request_memory=${memory_mb}
          request_disk=${disk_kb}
          error=${err}
          output=${out}
          log_xml=true
          request_cpus=${cpu}
          executable=${script}
          log=${cwd}/execution/execution.log
          queue
          EOF
          condor_submit ${cwd}/execution/submitFile
        """

        submit-docker = """
          chmod 755 ${script}
          cat > ${cwd}/execution/dockerScript <<EOF
          #!/bin/bash
          docker run --rm -i -v ${cwd}:${docker_cwd} ${docker} /bin/bash ${script}
          EOF
          chmod 755 ${cwd}/execution/dockerScript
          cat > ${cwd}/execution/submitFile <<EOF
          Iwd=${cwd}/execution
          requirements=${nativeSpecs}
          leave_in_queue=true
          request_memory=${memory_mb}
          request_disk=${disk_kb}
          error=${cwd}/execution/stderr
          output=${cwd}/execution/stdout
          log_xml=true
          request_cpus=${cpu}
          executable=${cwd}/execution/dockerScript
          log=${cwd}/execution/execution.log
          queue
          EOF
          condor_submit ${cwd}/execution/submitFile
        """

        kill = "condor_rm ${job_id}"
        check-alive = "condor_q ${job_id}"
        job-id-regex = "(?sm).*cluster (\\d+)..*"
      }
    }
}

