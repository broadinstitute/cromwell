include "application.conf"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

spray.can {
  server {
    request-timeout = 40s
  }
  client {
    request-timeout = 40s
    connecting-timeout = 40s
  }
}

call-caching {
  enabled = true
}

system.graceful-server-shutdown = true

backend {
  default = "Local"
  # Do not include LocalBourneShell among the enabled backends as that will run with /bin/sh which not all tests can handle.
  enabled = ["Local", "LocalNoDocker"]
  providers {
    Local {
      config {
        script-epilogue = "sleep 5 && sync"
      }
    }
    LocalNoDocker {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        run-in-background = true
        runtime-attributes = ""
        submit = "${job_shell} ${script}"
        root: "cromwell-executions"
        script-epilogue = "sleep 5 && sync"

        filesystems {
          local {
            localization: [
              "soft-link", "hard-link", "copy"
            ]

            caching {
              duplication-strategy: [
                "soft-link"
              ]

              # Possible values: file, path
              # "file" will compute an md5 hash of the file content.
              # "path" will compute an md5 hash of the file path. This strategy will only be effective if the duplication-strategy (above) is set to "soft-link",
              # in order to allow for the original file path to be hashed.
              hashing-strategy: "path"

              # When true, will check if a sibling file with the same name and the .md5 extension exists, and if it does, use the content of this file as a hash.
              # If false or the md5 does not exist, will proceed with the above-defined hashing strategy.
              check-sibling-md5: false
            }
          }
        }
      }
    }
    LocalBourneShell {
      # This is a stock Local backend configuration with job-shell=/bin/sh
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        job-shell: /bin/sh
        run-in-background = true
        root: "cromwell-executions"
        script-epilogue = "sleep 5 && sync"

        runtime-attributes = """
        String? docker
        String? docker_user
        """
        submit = "${job_shell} ${script}"
        submit-docker = """
          # make sure there is no preexisting Docker CID file
          rm -f ${docker_cid}
          # run as in the original configuration without --rm flag (will remove later)
          docker run \
            --cidfile ${docker_cid} \
            -i \
            ${"--user " + docker_user} \
            --entrypoint ${job_shell} \
            -v ${cwd}:${docker_cwd} \
            ${docker} ${script}

          # get the return code (working even if the container was detached)
          rc=$(docker wait `cat ${docker_cid}`)

          # remove the container after waiting
          docker rm `cat ${docker_cid}`

          # return exit code
          exit $rc
        """

        kill-docker = "docker kill `cat ${docker_cid}`"

        filesystems {
          local {
            localization: [
              "soft-link", "hard-link", "copy"
            ]

            caching {
              duplication-strategy: [
                "soft-link"
              ]

              # Possible values: file, path
              # "file" will compute an md5 hash of the file content.
              # "path" will compute an md5 hash of the file path. This strategy will only be effective if the duplication-strategy (above) is set to "soft-link",
              # in order to allow for the original file path to be hashed.
              hashing-strategy: "path"

              # When true, will check if a sibling file with the same name and the .md5 extension exists, and if it does, use the content of this file as a hash.
              # If false or the md5 does not exist, will proceed with the above-defined hashing strategy.
              check-sibling-md5: false
            }
          }
        }
      }
    }
  }
}

database {
  db.url = "jdbc:mysql://localhost/cromwell_test?rewriteBatchedStatements=true"
  db.user = "travis"
  db.password = ""
  db.driver = "com.mysql.jdbc.Driver"
  profile = "slick.jdbc.MySQLProfile$"
}

backend.providers.Local.config.filesystems.local.caching.duplication-strategy = ["copy"]
backend.providers.Local.config.filesystems.local.localization = ["soft-link", "copy"]
backend.providers.Local.config.concurrent-job-limit = 20
