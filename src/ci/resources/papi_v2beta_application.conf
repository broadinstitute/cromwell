include "papi_v2_shared_application.inc.conf"

backend {
  providers {
    Papi {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2 {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2USADockerhub {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2NoDockerHubConfig {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2RequesterPays {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"

        # Need this again (even though it's in the "papiv2_shared" file because the provider_config include overrides it.
        filesystems.gcs.auth = "requester_pays_service_account"
      }
    }
    Papi-Caching-No-Copy {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2-Virtual-Private-Cloud-Labels {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2-Virtual-Private-Cloud-Literals {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    papi-v2-gcsa {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    papi-v2-usa {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2ParallelCompositeUploads {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    Papiv2-Reference-Disk-Localization {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
      }
    }
    ################################################################################
    ######   THIS BACKEND IS EXCLUSIVE FOR PAPI V2 BETA AND THIS IS THE    #########
    ######   REASON WHY CONFIG VALUES FOR IT ARE DEFINED HERE INSTEAD OF   #########
    ######               papi_v2_shared_application.inc.conf               #########
    ######     DOCKER IMAGE CACHING IS NOT AVAILABLE ON PAPI V2 ALPHA      #########
    ################################################################################
    Papiv2-Docker-Image-Cache {
      actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
      config {
        include "papi_v2beta_provider_config.inc.conf"
        genomics.compute-service-account = "centaur@broad-dsde-cromwell-dev.iam.gserviceaccount.com"
        filesystems.http {}
        docker-image-cache-manifest-file = "gs://cloud-cromwell-dev/docker-image-cache-manifest-2021-01-22.json"
      }
    }
  }
}

services {
    MetadataService {
        # submittedFiles:workflow and commandLine are keys whose values are known to have the potential to contain
        # emojis, so they are specified here to prove that emojis are removed.
        # outputs:metadata_type_validation.validate_boolean.boolean_output was added to ensure that sanitizing the
        # metadata does not convert non-Strings to Strings since that key will always contain boolean values.
        metadata-keys-to-sanitize-utf8mb4 = ["submittedFiles:workflow", "commandLine", "outputs:metadata_type_validation.validate_boolean.boolean_output"]
    }
}
