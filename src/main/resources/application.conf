webservice.port = 8000
webservice.interface = 0.0.0.0
instance.name = "reference"

swagger {
  apiDocs = "api-docs"
  apiVersion = "0.1"
  baseUrl = "/"
  contact = "dsde@broadinstitute.org"
  description = "One workflow service to rule them all..."
  info = "Cromwell"
  license = "BSD"
  licenseUrl = "http://opensource.org/licenses/BSD-3-Clause"
  swaggerVersion = "1.2"
  termsOfServiceUrl = "http://www.github.com/broadinstitute/cromwell"
}

spray.can {
  server {
    request-timeout = 40s
  }
  client {
    request-timeout = 40s
    connecting-timeout = 40s
  }
}


backend {
  backend = "JES"

  jes {
    secretsFile = "/Users/chrisl/client_secrets.json"
    project = "broad-dsde-dev"
    user = "chrisl"
    rootUrl = "https://staging-genomics.sandbox.googleapis.com"
    applicationName = "cromwell"
    project = "broad-dsde-dev"
  }
}

google {
  user = "jgentry"
  authScheme = "service"

  userAuth {
    secretsFile = "/Users/jgentry/.google_client_secret.json"
    dataStoreDir = "/Users/jgentry/.jes-google-alpha"
  }

  serviceAuth {
    p12File = "/etc/dsde-dev-a28fabe2a6a3.p12"
    serviceAccountId = "806222273987-gffklo3qfd1gedvlgr55i84cocjh8efa@developer.gserviceaccount.com"
  }
}

database {
  config = main.hsqldb

  main {
    hsqldb {
      url = "jdbc:hsqldb:mem:${slick.uniqueSchema};shutdown=false"
      driver = "org.hsqldb.jdbcDriver"
      slick.driver = "slick.driver.HsqldbDriver"
      slick.createSchema = true
    }
  }

  test {
    hsqldb {
      url = "jdbc:hsqldb:mem:testdb;shutdown=false"
      driver = "org.hsqldb.jdbcDriver"
      slick.driver = "slick.driver.HsqldbDriver"
      liquibase = {
        changelog = "src/main/migrations/changelog.xml"
        connection = "liquibase.database.jvm.HsqlConnection"
      }
    }

    mysql {
      url = "jdbc:mysql://localhost/cromwell_test"
      user = "travis"
      password = ""
      driver = "com.mysql.jdbc.Driver"
      slick.driver = "slick.driver.MySQLDriver"
      liquibase = {
        changelog = "src/main/migrations/changelog.xml"
      }
    }
  }
}
