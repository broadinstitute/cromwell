swagger: '2.0'
info:
  title: Cromwell
  description: One workflow service to rule them all...
  contact:
    email: dsde@broadinstitute.org
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  termsOfService: 'http://www.github.com/broadinstitute/cromwell'
produces:
  - application/json
basePath: /api
paths:
  '/workflows/{version}/{id}/abort':
    post:
      summary: Abort a workflow based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowAbortResponse'
        '400':
          description: Malformed Workflow ID
        '403':
          description: Workflow in terminal status
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}':
    post:
      summary: Submit a new workflow for execution
      consumes:
        - multipart/form-data
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: wdlSource
          description: WDL Source
          required: true
          type: file
          in: formData
        - name: workflowInputs
          description: WDL Inputs JSON
          required: false
          type: file
          in: formData
        - name: workflowOptions
          description: Workflow Options JSON
          required: false
          type: file
          in: formData
      tags:
        - Workflows
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowSubmitResponse'
        '400':
          description: Malformed Input
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/validate':
    post:
      summary: Validate a workflow for execution
      consumes:
        - multipart/form-data
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: wdlSource
          description: WDL Source
          required: true
          type: file
          in: formData
        - name: workflowInputs
          description: WDL JSON
          required: true
          type: file
          in: formData
      tags:
         - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowValidateResponse'
        '400':
          description: Malformed Input
          schema:
            $ref: '#/definitions/WorkflowValidateResponse'
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/outputs':
    get:
      summary: Query for workflow outputs based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/outputs/{callFqn}':
    get:
      summary: Query for call outputs based on workflow id and call fully qualified name
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: callFqn
          description: Call fully qualified name
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Call Fully Qualified Name Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/query':
    get:
      summary: Query workflows by start dates, end dates, names, or statuses.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: start
          description: Start Date
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later start datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: end
          description: End Date
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: status
          description: Status
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - Submitted
            - Running
            - Aborting
            - Failed
            - Succeeded
            - Aborted
          description: >
            Returns only workflows with the specified status.  If specified multiple times,
            returns workflows in any of the specified statuses.
        - name: name
          description: Name
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          description: >
            Returns only workflows with the specified name.  If specified multiple times,
            returns workflows with any of the specified names.
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '403':
          description: Malformed Request
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/status':
    get:
      summary: Query for workflow status based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowStatusResponse'
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/logs/{callFqn}':
    get:
      summary: Query standard output and error of a call from its fully qualified name
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: callFqn
          description: Call fully qualified name
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Call Fully Qualified Name Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/logs':
    get:
      summary: Query for the standard output and error of all calls in a workflow
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/metadata':
    get:
      summary: Query for workflow and call-level metadata for a specified workflow
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
          examples:
            application/json: |-
              {
                "calls": {
                  "sc_test.do_prepare": [{
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/stdout",
                    "outputs": {
                      "split_files": ["/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_aa", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ab", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ac", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ad"]
                    },
                    "inputs": {
                      "input_file": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/workflow-inputs/e46345ba-11.txt"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/jes-stderr.log"
                    }
                  }],
                  "sc_test.do_scatter": [{
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/stdout",
                    "outputs": {
                      "count_file": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/output.txt"
                    },
                    "inputs": {
                      "input_file": "f"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-sc_test/shard-0/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/jes-stderr.log"
                    }
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-1/stdout",
                    "outputs": {
                      "count_file": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-1/output.txt"
                    },
                    "inputs": {
                      "input_file": "f"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-1/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-sc_test/shard-1/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-1/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/jes-stderr.log"
                    }
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/stdout",
                    "outputs": {
                      "count_file": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/output.txt"
                    },
                    "inputs": {
                      "input_file": "f"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-sc_test/shard-2/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/jes-stderr.log"
                    }
                  }, {
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/stdout",
                    "outputs": {
                      "count_file": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/output.txt"
                    },
                    "inputs": {
                      "input_file": "f"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-sc_test/shard-3/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/jes-stderr.log"
                    }
                  }],
                  "sc_test.do_gather": [{
                    "executionStatus": "Done",
                    "stdout": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_gather/stdout",
                    "outputs": {
                      "sum": 11
                    },
                    "inputs": {
                      "input_files": "do_scatter.count_file"
                    },
                    "returnCode": 0,
                    "backend": "Local",
                    "stderr": "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_gather/stderr",
                    "backendLogs": {
                      "log": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_gather/jes.log",
                      "stdout": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_gather/jes-stdout.log",
                      "stderr": "gs://cromwell-dev/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_gather/jes-stderr.log"
                    }
                  }]
                },
                "outputs": {
                  "sc_test.do_gather.sum": 11,
                  "sc_test.do_prepare.split_files": ["/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_aa", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ab", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ac", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_prepare/temp_ad"],
                  "sc_test.do_scatter.count_file": ["/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-0/output.txt", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-1/output.txt", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-2/output.txt", "/home/jdoe/cromwell/cromwell-executions/sc_test/6efd83b7-39df-47d7-bb2d-96ebb9f093a2/call-do_scatter/shard-3/output.txt"]
                },
                "id": "6efd83b7-39df-47d7-bb2d-96ebb9f093a2",
                "inputs": {
                  "sc_test.do_prepare.input_file": "/home/jdoe/cromwell/11.txt"
                },
                "submission": "2015-09-29T14:06:32.120-04:00",
                "status": "Succeeded",
                "start": "2015-09-29T14:06:32.120-04:00"
              }
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/call-caching':
    post:
      summary: Alter call cache result reuse settings for all calls within the specified workflow.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: allow
          description: Whether to allow call cache result reuse for all calls within the specified workflow.
          required: true
          type: boolean
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/CallCachingResponse'
        '400':
          description: Validation error
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
  '/workflows/{version}/{id}/call-caching/{callFqn}':
    post:
      summary: Alter call cache result reuse settings for the specified call within the specified workflow.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: callFqn
          description: Call fully qualified name
          required: true
          type: string
          in: path
        - name: allow
          description: Whether to allow call cache result reuse for the specified call within the workflow.
          required: true
          type: boolean
          in: query
      tags:
        - Workflows
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/CallCachingResponse'
        '400':
          description: Validation error
        '500':
          description: Internal Error
      security:
        - google_oauth:
            - openid
securityDefinitions:
  google_oauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
definitions:
  WorkflowValidateResponse:
    description: ''
    required:
      - valid
    properties:
      valid:
        type: boolean
        description: The validation of the workflow
      error:
        type: string
        description: The validation error of the workflow
  WorkflowSubmitResponse:
    description: ''
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowAbortResponse:
    description: ''
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowStatusResponse:
    description: ''
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowMetadataResponse:
    description: 'Workflow and call level metadata'
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
      submission:
        type: string
        format: date-time
        description: Submission datetime of the workflow in ISO8601 format with milliseconds
      start:
        type: string
        format: date-time
        description: Start datetime of the workflow in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the workflow in ISO8601 format with milliseconds
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      calls:
        type: object
        description: Map of call fully qualified names to lists of call metadata
  CallMetadata:
    description: 'Call level metadata'
    required:
      - inputs
      - status
    properties:
      inputs:
        type: object
        description: Mapping of input fully qualified names to stringified values
      executionStatus:
        type: string
        description: Status in Cromwell execution terms.
      backend:
        type: string
        description: The type of backend on which the call executed (e.g. JES, SGE, Local)
      backendStatus:
        type: string
        description: Status in backend-specific terms.  Currently this will only be defined for the JES backend.
      start:
        type: string
        format: date-time
        description: Start datetime of the call execution in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the call execution in ISO8601 format with milliseconds
      jobId:
        type: string
        description: Backend-specific job ID
      returnCode:
        type: int
        description: Call execution return code
      stdout:
        type: string
        description: Path to the standard output file for this call
      stderr:
        type: string
        description: Path to the standard error file for this call
      backendLogs:
        type: object
        description: Paths to backend specific logs for this call
  WorkflowQueryResponse:
    description: Response to a workflow query
    required:
      - results
    properties:
      results:
        type: array
        items:
          $ref: WorkflowQueryResult
  WorkflowQueryResult:
    description: Result for an individual workflow returned by a workflow query
    required:
      - id
      - name
      - status
      - start
    properties:
      id:
        type: string
        description: Workflow ID
      name:
        type: string
        description: Workflow name
      status:
        type: string
        description: Workflow status
      start:
        type: string
        format: date-time
        description: Workflow start datetime
      end:
        type: string
        format: date-time
        description: Workflow end datetime
  CallCachingResponse:
    description: Update count for call caching result reuse endpoints.
    required:
      - updateCount
    properties:
      updateCount:
        type: int
        description: Number of calls updated by this request.

